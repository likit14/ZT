{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Sidebar from \"../Components/sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../Styles/Validation.module.css\";\nimport Swal from \"sweetalert2\";\nimport validationData from \"../Comparison/sample.json\";\nimport requirementData from \"../Comparison/min_requirements.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Validation = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  const [scanResults, setScanResults] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedNodes\n  } = location.state || {\n    selectedNodes: []\n  };\n  useEffect(() => {\n    fetchScanResults();\n  }, []);\n  const fetchScanResults = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/scan\");\n      setScanResults(response.data);\n    } catch (error) {\n      console.error(\"Error fetching scan results:\", error);\n    }\n  };\n  const validateNode = node => {\n    setValidatingNode(node);\n    setCurrentNode(node);\n    setBmcDetails({\n      ...bmcDetails,\n      ip: node.ip\n    });\n    setBmcFormVisible(true);\n  };\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    }, 100);\n  };\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n  const handleDeploy = () => {\n    navigate(\"/designatednode\", {\n      state: {\n        selectedNodes: selectedRows\n      }\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/set_pxe_boot\", bmcDetails);\n      console.log(bmcDetails);\n\n      // Comparison logic\n      const comparisonResults = compareSpecs(validationData, requirementData);\n\n      // Store results in validationResults\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [currentNode.ip]: {\n          status: \"PXE Boot on Progress\",\n          cpuCoresPassed: comparisonResults.cpuCoresPassed,\n          memoryPassed: comparisonResults.memoryPassed,\n          diskPassed: comparisonResults.diskPassed,\n          nicPassed: comparisonResults.nicPassed\n        }\n      }));\n      Swal.fire({\n        title: \"Success\",\n        text: \"Validation Done\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#28a745\"\n      });\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    } catch (error) {\n      console.error(\"Error setting PXE boot:\", error);\n      Swal.fire({\n        title: \"Failed\",\n        text: \"Failed to set PXE boot. Please try again.\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#dc3545\"\n      });\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    }\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false);\n    setValidatingNode(null);\n  };\n  const handleInfoButtonClick = () => {\n    // Check if the validation results exist for the current node\n    if (!validationResults || !currentNode || !validationResults[currentNode.ip]) {\n      Swal.fire({\n        title: \"Error\",\n        text: \"Validation not done or BMC details are incorrect. Please check and try again.\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#dc3545\"\n      });\n      return;\n    }\n\n    // Get the current validation result for the node\n    const result = validationResults[currentNode.ip];\n\n    // Fetch min requirements and result values\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = requirementData.memory; // Keep as string (e.g., \"8Gi\")\n    const minDiskCount = requirementData.disk_count;\n    const minNic1GCount = requirementData.nic_1g_count;\n    const validationCpuCores = validationData.cpu_cores;\n    const validationMemory = validationData.memory; // Keep as string (e.g., \"31Gi\")\n    const validationDiskCount = validationData.disk_count;\n    const validationNic1GCount = validationData.nic_1g_count;\n\n    // Determine heading color based on status\n    const headingColor = result.cpuCoresPassed && result.memoryPassed && result.diskPassed && result.nicPassed ? \"#28a745\" : \"#dc3545\";\n\n    // Create HTML message with Min Req Value and Result Value\n    const msg = `\n    <h1 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 20px; color: ${headingColor};\">\n        TEST RESULT: ${result.cpuCoresPassed && result.memoryPassed && result.diskPassed && result.nicPassed ? \"PASSED\" : \"FAILED\"}\n    </h1>\n    <div style=\"cursor: pointer; font-size: 1.1rem; color: #007bff; margin-bottom: 10px;\" id=\"toggleReport\">\n        Detailed Report <span id=\"arrow\" style=\"font-size: 1.1rem;\">▼</span>\n    </div>\n    <div id=\"reportWrapper\" style=\"max-height: 0; overflow: hidden; transition: max-height 0.3s ease;\">\n        <table style=\"width:100%; border-collapse: collapse; margin-top: 10px; border-radius: 10px; overflow: hidden;\">\n            <thead style=\"background-color: #f8f9fa;\">\n                <tr>\n                    <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">PARAMETER</th>\n                    <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Min Req Value</th>\n                    <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Result Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">CPU Cores</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minCpuCores}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationCpuCores}</td>\n                </tr>\n                <tr style=\"background-color: #f8f9fa;\">\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">RAM</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minMemory}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationMemory}</td>\n                </tr>\n                <tr>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">Disk Count</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minDiskCount}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationDiskCount}</td>\n                </tr>\n                <tr style=\"background-color: #f8f9fa;\">\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">1G NIC Count</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minNic1GCount}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationNic1GCount}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>`;\n\n    // Display the Swal modal\n    Swal.fire({\n      confirmButtonText: \"OK\",\n      confirmButtonColor: \"#17a2b8\",\n      html: msg,\n      didRender: () => {\n        const toggleButton = document.getElementById(\"toggleReport\");\n        const reportWrapper = document.getElementById(\"reportWrapper\");\n        const arrow = document.getElementById(\"arrow\");\n        toggleButton.addEventListener(\"click\", () => {\n          if (reportWrapper.style.maxHeight === \"0px\") {\n            reportWrapper.style.maxHeight = reportWrapper.scrollHeight + \"px\";\n            arrow.textContent = \"▲\"; // Change arrow to up arrow\n          } else {\n            reportWrapper.style.maxHeight = \"0px\";\n            arrow.textContent = \"▼\"; // Change arrow to down arrow\n          }\n        });\n      }\n    });\n  };\n  const compareSpecs = (validationData, requirementData) => {\n    const validationMemory = parseInt(validationData.memory.replace(\" Gi\", \"\"));\n    const validationCpuCores = parseInt(validationData.cpu_cores);\n    const validationDiskCount = parseInt(validationData.disk_count);\n    const validationNic1GCount = parseInt(validationData.nic_1g_count);\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = parseInt(requirementData.memory.replace(\" Gi\", \"\"));\n    const minDiskCount = parseInt(requirementData.disk_count);\n    const minNic1GCount = requirementData.nic_1g_count;\n    return {\n      cpuCoresPassed: validationCpuCores >= minCpuCores,\n      memoryPassed: validationMemory >= minMemory,\n      diskPassed: validationDiskCount >= minDiskCount,\n      nicPassed: validationNic1GCount >= minNic1GCount\n    };\n  };\n  const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"data-table-container\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: styles[\"data-table\"],\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Sl No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"IP Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validation Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: styles[\"no-device-message\"],\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"No devices selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this) : paginatedNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (currentPage - 1) * itemsPerPage + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.ip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                      onClick: () => validateNode(node),\n                      children: validatingNode !== null && validatingNode.ip === node.ip ? \"Validating\" : \"Validate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: \"red\",\n                      fontFamily: \"Arial, sans-serif\"\n                    },\n                    children: validationResults[node.ip] ? validationResults[node.ip].status : \"Not validated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: validationResults[node.ip] || formSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleInfoButtonClick,\n                      children: \"Info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles[\"checkbox-column\"],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: styles[\"checkbox-label\"],\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedRows.some(row => row.ip === node.ip),\n                        onChange: event => handleCheckboxChange(event, node)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: styles[\"checkbox-custom\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this)]\n                }, node.ip, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pagination,\n              children: Array.from({\n                length: Math.ceil(selectedNodes.length / itemsPerPage)\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(i + 1),\n                className: styles[currentPage === i + 1 ? \"active\" : \"\"],\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleDeploy,\n              disabled: selectedRows.length === 0,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Enter BMC Details for \", currentNode === null || currentNode === void 0 ? void 0 : currentNode.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles[\"cancel-button\"],\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(Validation, \"ITt1nQPSVqTOr3WhifxVjRLwpGM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","Sidebar","FontAwesomeIcon","faArrowLeft","styles","Swal","validationData","requirementData","jsxDEV","_jsxDEV","Validation","_s","selectedRows","setSelectedRows","validationResults","setValidationResults","validatingNode","setValidatingNode","currentPage","setCurrentPage","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","ip","username","password","scanResults","setScanResults","formSubmitted","setFormSubmitted","itemsPerPage","navigate","location","selectedNodes","state","fetchScanResults","response","get","data","error","console","validateNode","node","handleBack","setTimeout","window","scrollTo","top","behavior","handleCheckboxChange","event","isChecked","target","checked","filter","selectedRow","handleDeploy","handlePageChange","newPage","handleBmcFormSubmit","preventDefault","post","log","comparisonResults","compareSpecs","prevResults","status","cpuCoresPassed","memoryPassed","diskPassed","nicPassed","fire","title","text","confirmButtonText","confirmButtonColor","handleCancel","handleInfoButtonClick","result","minCpuCores","cpu_cores","minMemory","memory","minDiskCount","disk_count","minNic1GCount","nic_1g_count","validationCpuCores","validationMemory","validationDiskCount","validationNic1GCount","headingColor","msg","html","didRender","toggleButton","document","getElementById","reportWrapper","arrow","addEventListener","style","maxHeight","scrollHeight","textContent","parseInt","replace","paginatedNodes","slice","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","main","container","length","colSpan","map","index","disabled","color","fontFamily","type","some","row","onChange","pagination","Array","from","Math","ceil","_","i","visible","onSubmit","value","e","required","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Sidebar from \"../Components/sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../Styles/Validation.module.css\";\nimport Swal from \"sweetalert2\";\nimport validationData from \"../Comparison/sample.json\";\nimport requirementData from \"../Comparison/min_requirements.json\";\n\nconst Validation = () => {\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: \"\",\n    username: \"\",\n    password: \"\",\n  });\n  const [scanResults, setScanResults] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { selectedNodes } = location.state || { selectedNodes: [] };\n\n  useEffect(() => {\n    fetchScanResults();\n  }, []);\n\n  const fetchScanResults = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/scan\");\n      setScanResults(response.data);\n    } catch (error) {\n      console.error(\"Error fetching scan results:\", error);\n    }\n  };\n\n  const validateNode = (node) => {\n    setValidatingNode(node);\n    setCurrentNode(node);\n    setBmcDetails({ ...bmcDetails, ip: node.ip });\n    setBmcFormVisible(true);\n  };\n\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    }, 100);\n  };\n\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(\n        selectedRows.filter((selectedRow) => selectedRow.ip !== node.ip)\n      );\n    }\n  };\n\n  const handleDeploy = () => {\n    navigate(\"/designatednode\", { state: { selectedNodes: selectedRows } });\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  const handleBmcFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/set_pxe_boot\",\n        bmcDetails\n      );\n      console.log(bmcDetails);\n\n      // Comparison logic\n      const comparisonResults = compareSpecs(validationData, requirementData);\n\n      // Store results in validationResults\n      setValidationResults((prevResults) => ({\n        ...prevResults,\n        [currentNode.ip]: {\n          status: \"PXE Boot on Progress\",\n          cpuCoresPassed: comparisonResults.cpuCoresPassed,\n          memoryPassed: comparisonResults.memoryPassed,\n          diskPassed: comparisonResults.diskPassed,\n          nicPassed: comparisonResults.nicPassed,\n        },\n      }));\n\n      Swal.fire({\n        title: \"Success\",\n        text: \"Validation Done\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#28a745\",\n      });\n\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    } catch (error) {\n      console.error(\"Error setting PXE boot:\", error);\n\n      Swal.fire({\n        title: \"Failed\",\n        text: \"Failed to set PXE boot. Please try again.\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#dc3545\",\n      });\n\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    }\n  };\n\n  const handleCancel = () => {\n    setBmcFormVisible(false);\n    setValidatingNode(null);\n  };\n  const handleInfoButtonClick = () => {\n    // Check if the validation results exist for the current node\n    if (\n      !validationResults ||\n      !currentNode ||\n      !validationResults[currentNode.ip]\n    ) {\n      Swal.fire({\n        title: \"Error\",\n        text: \"Validation not done or BMC details are incorrect. Please check and try again.\",\n        confirmButtonText: \"OK\",\n        confirmButtonColor: \"#dc3545\",\n      });\n      return;\n    }\n\n    // Get the current validation result for the node\n    const result = validationResults[currentNode.ip];\n\n    // Fetch min requirements and result values\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = requirementData.memory; // Keep as string (e.g., \"8Gi\")\n    const minDiskCount = requirementData.disk_count;\n    const minNic1GCount = requirementData.nic_1g_count;\n\n    const validationCpuCores = validationData.cpu_cores;\n    const validationMemory = validationData.memory; // Keep as string (e.g., \"31Gi\")\n    const validationDiskCount = validationData.disk_count;\n    const validationNic1GCount = validationData.nic_1g_count;\n\n    // Determine heading color based on status\n    const headingColor =\n      result.cpuCoresPassed &&\n      result.memoryPassed &&\n      result.diskPassed &&\n      result.nicPassed\n        ? \"#28a745\"\n        : \"#dc3545\";\n\n    // Create HTML message with Min Req Value and Result Value\n    const msg = `\n    <h1 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 20px; color: ${headingColor};\">\n        TEST RESULT: ${\n          result.cpuCoresPassed &&\n          result.memoryPassed &&\n          result.diskPassed &&\n          result.nicPassed\n            ? \"PASSED\"\n            : \"FAILED\"\n        }\n    </h1>\n    <div style=\"cursor: pointer; font-size: 1.1rem; color: #007bff; margin-bottom: 10px;\" id=\"toggleReport\">\n        Detailed Report <span id=\"arrow\" style=\"font-size: 1.1rem;\">▼</span>\n    </div>\n    <div id=\"reportWrapper\" style=\"max-height: 0; overflow: hidden; transition: max-height 0.3s ease;\">\n        <table style=\"width:100%; border-collapse: collapse; margin-top: 10px; border-radius: 10px; overflow: hidden;\">\n            <thead style=\"background-color: #f8f9fa;\">\n                <tr>\n                    <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">PARAMETER</th>\n                    <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Min Req Value</th>\n                    <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Result Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">CPU Cores</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minCpuCores}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationCpuCores}</td>\n                </tr>\n                <tr style=\"background-color: #f8f9fa;\">\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">RAM</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minMemory}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationMemory}</td>\n                </tr>\n                <tr>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">Disk Count</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minDiskCount}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationDiskCount}</td>\n                </tr>\n                <tr style=\"background-color: #f8f9fa;\">\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">1G NIC Count</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${minNic1GCount}</td>\n                    <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${validationNic1GCount}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>`;\n\n    // Display the Swal modal\n    Swal.fire({\n      confirmButtonText: \"OK\",\n      confirmButtonColor: \"#17a2b8\",\n      html: msg,\n      didRender: () => {\n        const toggleButton = document.getElementById(\"toggleReport\");\n        const reportWrapper = document.getElementById(\"reportWrapper\");\n        const arrow = document.getElementById(\"arrow\");\n\n        toggleButton.addEventListener(\"click\", () => {\n          if (reportWrapper.style.maxHeight === \"0px\") {\n            reportWrapper.style.maxHeight = reportWrapper.scrollHeight + \"px\";\n            arrow.textContent = \"▲\"; // Change arrow to up arrow\n          } else {\n            reportWrapper.style.maxHeight = \"0px\";\n            arrow.textContent = \"▼\"; // Change arrow to down arrow\n          }\n        });\n      },\n    });\n  };\n\n  const compareSpecs = (validationData, requirementData) => {\n    const validationMemory = parseInt(validationData.memory.replace(\" Gi\", \"\"));\n    const validationCpuCores = parseInt(validationData.cpu_cores);\n    const validationDiskCount = parseInt(validationData.disk_count);\n    const validationNic1GCount = parseInt(validationData.nic_1g_count);\n\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = parseInt(requirementData.memory.replace(\" Gi\", \"\"));\n    const minDiskCount = parseInt(requirementData.disk_count);\n    const minNic1GCount = requirementData.nic_1g_count;\n\n    return {\n      cpuCoresPassed: validationCpuCores >= minCpuCores,\n      memoryPassed: validationMemory >= minMemory,\n      diskPassed: validationDiskCount >= minDiskCount,\n      nicPassed: validationNic1GCount >= minNic1GCount,\n    };\n  };\n\n  const paginatedNodes = selectedNodes.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <button className={styles[\"back-button\"]} onClick={handleBack}>\n          <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n        </button>\n        <center>\n          <h1>Validation</h1>\n        </center>\n      </div>\n      <div className={styles.main}>\n        <div className={styles[\"data-table-container\"]}>\n          <div className={styles.container}>\n            <div>\n              <table className={styles[\"data-table\"]}>\n                <thead>\n                  <tr>\n                    <th>Sl No.</th>\n                    <th>IP Address</th>\n                    <th>Validate</th>\n                    <th>Validation Status</th>\n                    <th>Result</th>\n                    <th>Select</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {selectedNodes.length === 0 ? (\n                    <tr>\n                      <td colSpan=\"6\" className={styles[\"no-device-message\"]}>\n                        <center>No devices selected</center>\n                      </td>\n                    </tr>\n                  ) : (\n                    paginatedNodes.map((node, index) => (\n                      <tr key={node.ip}>\n                        <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                        <td>{node.ip}</td>\n                        <td>\n                          <button\n                            disabled={\n                              validatingNode !== null &&\n                              validatingNode.ip === node.ip\n                            }\n                            onClick={() => validateNode(node)}\n                          >\n                            {validatingNode !== null &&\n                            validatingNode.ip === node.ip\n                              ? \"Validating\"\n                              : \"Validate\"}\n                          </button>\n                        </td>\n                        <td\n                          style={{\n                            color: \"red\",\n                            fontFamily: \"Arial, sans-serif\",\n                          }}\n                        >\n                          {validationResults[node.ip]\n                            ? validationResults[node.ip].status\n                            : \"Not validated\"}\n                        </td>\n                        <td>\n                          {validationResults[node.ip] || formSubmitted ? (\n                            <button onClick={handleInfoButtonClick}>\n                              Info\n                            </button>\n                          ) : null}\n                        </td>\n                        <td className={styles[\"checkbox-column\"]}>\n                          <label className={styles[\"checkbox-label\"]}>\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedRows.some(\n                                (row) => row.ip === node.ip\n                              )}\n                              onChange={(event) =>\n                                handleCheckboxChange(event, node)\n                              }\n                            />\n                            <span className={styles[\"checkbox-custom\"]}></span>\n                          </label>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n\n              <div className={styles.pagination}>\n                {Array.from(\n                  { length: Math.ceil(selectedNodes.length / itemsPerPage) },\n                  (_, i) => (\n                    <button\n                      key={i}\n                      onClick={() => handlePageChange(i + 1)}\n                      className={styles[currentPage === i + 1 ? \"active\" : \"\"]}\n                    >\n                      {i + 1}\n                    </button>\n                  )\n                )}\n              </div>\n              <button\n                className=\"next-button\"\n                onClick={handleDeploy}\n                disabled={selectedRows.length === 0}\n              >\n                <strong>Next</strong>\n              </button>\n            </div>\n            <Sidebar />\n          </div>\n        </div>\n      </div>\n\n      {/* BMC Form */}\n      <div\n        className={`${styles[\"bmc-form\"]} ${\n          bmcFormVisible ? styles.visible : \"\"\n        }`}\n      >\n        <h2>\n          <strong>Enter BMC Details for {currentNode?.ip}</strong>\n        </h2>\n        <form onSubmit={handleBmcFormSubmit}>\n          <label>\n            BMC IP Address:\n            <input\n              type=\"text\"\n              value={bmcDetails.ip}\n              onChange={(e) =>\n                setBmcDetails({ ...bmcDetails, ip: e.target.value })\n              }\n              required\n            />\n          </label>\n          <label>\n            BMC Username:\n            <input\n              type=\"text\"\n              value={bmcDetails.username}\n              onChange={(e) =>\n                setBmcDetails({ ...bmcDetails, username: e.target.value })\n              }\n              required\n            />\n          </label>\n          <label>\n            BMC Password:\n            <input\n              type=\"password\"\n              value={bmcDetails.password}\n              onChange={(e) =>\n                setBmcDetails({ ...bmcDetails, password: e.target.value })\n              }\n              required\n            />\n          </label>\n          <div>\n            <button type=\"submit\">Submit</button>\n            <button\n              type=\"button\"\n              className={styles[\"cancel-button\"]}\n              onClick={handleCancel}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Validation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}