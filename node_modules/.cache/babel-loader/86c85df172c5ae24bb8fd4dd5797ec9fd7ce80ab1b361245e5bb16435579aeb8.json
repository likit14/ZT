{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Documents/GitHub/Pinakastra-Cloud/src/View/DesignatedNode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\nimport '../Styles/DesignatedNode.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignatedNodes = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [selectedRows, setSelectedRows] = useState(location.state.selectedNodes || []);\n  const [roles, setRoles] = useState(selectedRows.map((node, index) => ({\n    id: index + 1,\n    slNo: index + 1,\n    ipAddress: node.ip,\n    hostname: node.hostname,\n    roles: []\n  })));\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: '',\n    username: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [deploymentCompleted, setDeploymentCompleted] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 5;\n  const handleCheckboxChange = (event, row, role) => {\n    const isChecked = event.target.checked;\n    const updatedRoles = roles.map(item => {\n      if (item.id === row.id) {\n        const rolesSet = new Set(item.roles);\n        if (isChecked) {\n          rolesSet.add(role);\n        } else {\n          rolesSet.delete(role);\n        }\n        return {\n          ...item,\n          roles: Array.from(rolesSet)\n        };\n      }\n      return item;\n    });\n    setRoles(updatedRoles);\n    const updatedSelectedRows = isChecked ? [...selectedRows, row] : selectedRows.filter(selectedRow => selectedRow.id !== row.id);\n    setSelectedRows(updatedSelectedRows);\n  };\n  const handleDeploy = node => {\n    setCurrentNode(node);\n    setBmcFormVisible(true);\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n\n    // Simulate API call or actual deployment logic here\n    try {\n      const response = await fetch('http://localhost:8000/set_pxe_boot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bmcDetails)\n      });\n      const result = await response.json();\n      console.log(result);\n\n      // Mark deployment as completed\n      setDeploymentCompleted(true);\n\n      // Optionally reset form state\n      setBmcDetails({\n        ip: '',\n        username: '',\n        password: ''\n      });\n\n      // Close the form after successful deployment\n      setBmcFormVisible(false);\n\n      // Navigate to deployment info page\n      navigate('/deploymentinfo');\n    } catch (error) {\n      console.error('Deployment error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false);\n    setLoading(false);\n  };\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = roles.slice(indexOfFirstRow, indexOfLastRow);\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n  const handlePreviousPage = () => {\n    setCurrentPage(prevPage => prevPage - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.headers,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Designated Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.data - table - container,\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          styles: styles.dataTable,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              styles: styles.tableHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                styles: styles.tableCell,\n                children: \"Sl No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                styles: styles.tableCell,\n                children: \"IP Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                styles: styles.tableCell,\n                children: \"Hostname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                styles: styles.tableCell,\n                children: \"Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                styles: styles.tableCell,\n                children: \"Deploy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              styles: styles.tableRow,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                styles: styles.tableCell,\n                children: row.slNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                styles: styles.tableCell,\n                children: row.ipAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                styles: styles.tableCell,\n                children: row.hostname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                styles: {\n                  ...styles.tableCell,\n                  ...styles.checkboxColumn\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: row.roles.includes('Compute'),\n                    onChange: event => handleCheckboxChange(event, row, 'Compute')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"HCI\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: row.roles.includes('Control'),\n                    onChange: event => handleCheckboxChange(event, row, 'Control')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Compute&Storage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                styles: styles.tableCell,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeploy(row),\n                  children: \"Deploy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), loading && currentNode && currentNode.id === row.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  styles: styles.loader\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this), deploymentCompleted && currentNode && currentNode.id === row.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  styles: styles.completed,\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          styles: styles.pagination,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousPage,\n            disabled: currentPage === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextPage,\n            disabled: indexOfLastRow >= roles.length,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), bmcFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      styles: styles.bmcForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Enter BMC Details for \", currentNode.hostname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(DesignatedNodes, \"WlVRTxQzXZarvkgMLM7rbZApX4o=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = DesignatedNodes;\nexport default DesignatedNodes;\nvar _c;\n$RefreshReg$(_c, \"DesignatedNodes\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","Sidebar","Footer","jsxDEV","_jsxDEV","DesignatedNodes","_s","location","navigate","selectedRows","setSelectedRows","state","selectedNodes","roles","setRoles","map","node","index","id","slNo","ipAddress","ip","hostname","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","username","password","loading","setLoading","deploymentCompleted","setDeploymentCompleted","currentPage","setCurrentPage","rowsPerPage","handleCheckboxChange","event","row","role","isChecked","target","checked","updatedRoles","item","rolesSet","Set","add","delete","Array","from","updatedSelectedRows","filter","selectedRow","handleDeploy","handleBmcFormSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","error","handleCancel","indexOfLastRow","indexOfFirstRow","currentRows","slice","handleNextPage","prevPage","handlePreviousPage","children","className","styles","fileName","_jsxFileName","lineNumber","columnNumber","dataContainer","data","table","container","dataTable","tableHeader","tableCell","tableRow","checkboxColumn","type","includes","onChange","onClick","loader","completed","pagination","disabled","length","bmcForm","onSubmit","value","e","required","_c","$RefreshReg$"],"sources":["/home/krishna/Documents/GitHub/Pinakastra-Cloud/src/View/DesignatedNode.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\nimport '../Styles/DesignatedNode.module.css';\n\nconst DesignatedNodes = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [selectedRows, setSelectedRows] = useState(location.state.selectedNodes || []);\n    const [roles, setRoles] = useState(selectedRows.map((node, index) => ({\n        id: index + 1,\n        slNo: index + 1,\n        ipAddress: node.ip,\n        hostname: node.hostname,\n        roles: []\n    })));\n\n    const [bmcFormVisible, setBmcFormVisible] = useState(false);\n    const [currentNode, setCurrentNode] = useState(null);\n    const [bmcDetails, setBmcDetails] = useState({\n        ip: '',\n        username: '',\n        password: ''\n    });\n\n    const [loading, setLoading] = useState(false);\n    const [deploymentCompleted, setDeploymentCompleted] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const rowsPerPage = 5;\n\n    const handleCheckboxChange = (event, row, role) => {\n        const isChecked = event.target.checked;\n        const updatedRoles = roles.map(item => {\n            if (item.id === row.id) {\n                const rolesSet = new Set(item.roles);\n                if (isChecked) {\n                    rolesSet.add(role);\n                } else {\n                    rolesSet.delete(role);\n                }\n                return { ...item, roles: Array.from(rolesSet) };\n            }\n            return item;\n        });\n        setRoles(updatedRoles);\n\n        const updatedSelectedRows = isChecked\n            ? [...selectedRows, row]\n            : selectedRows.filter(selectedRow => selectedRow.id !== row.id);\n        setSelectedRows(updatedSelectedRows);\n    };\n\n    const handleDeploy = (node) => {\n        setCurrentNode(node);\n        setBmcFormVisible(true);\n    };\n\n    const handleBmcFormSubmit = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n\n        // Simulate API call or actual deployment logic here\n        try {\n            const response = await fetch('http://localhost:8000/set_pxe_boot', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(bmcDetails)\n            });\n\n            const result = await response.json();\n            console.log(result);\n\n            // Mark deployment as completed\n            setDeploymentCompleted(true);\n\n            // Optionally reset form state\n            setBmcDetails({\n                ip: '',\n                username: '',\n                password: ''\n            });\n\n            // Close the form after successful deployment\n            setBmcFormVisible(false);\n\n            // Navigate to deployment info page\n            navigate('/deploymentinfo');\n        } catch (error) {\n            console.error('Deployment error:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCancel = () => {\n        setBmcFormVisible(false);\n        setLoading(false);\n    };\n\n    const indexOfLastRow = currentPage * rowsPerPage;\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n    const currentRows = roles.slice(indexOfFirstRow, indexOfLastRow);\n\n    const handleNextPage = () => {\n        setCurrentPage(prevPage => prevPage + 1);\n    };\n\n    const handlePreviousPage = () => {\n        setCurrentPage(prevPage => prevPage - 1);\n    };\n\n    return (\n        <div>\n        <div className={styles.headers}>\n            <h1>Designated Nodes</h1>\n        </div>\n        <div className={styles.dataContainer}>\n            <div className={styles.data-table-container}>\n                <table styles={styles.dataTable}>\n                    <thead>\n                        <tr styles={styles.tableHeader}>\n                            <th styles={styles.tableCell}>Sl No.</th>\n                            <th styles={styles.tableCell}>IP Address</th>\n                            <th styles={styles.tableCell}>Hostname</th>\n                            <th styles={styles.tableCell}>Roles</th>\n                            <th styles={styles.tableCell}>Deploy</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {currentRows.map((row, index) => (\n                            <tr key={index} styles={styles.tableRow}>\n                                <td styles={styles.tableCell}>{row.slNo}</td>\n                                <td styles={styles.tableCell}>{row.ipAddress}</td>\n                                <td styles={styles.tableCell}>{row.hostname}</td>\n                                <td styles={{ ...styles.tableCell, ...styles.checkboxColumn }}>\n                                    <label>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={row.roles.includes('Compute')}\n                                            onChange={(event) => handleCheckboxChange(event, row, 'Compute')}\n                                        />\n                                        <span>HCI</span>\n                                    </label>\n                                    <br />\n                                    <label>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={row.roles.includes('Control')}\n                                            onChange={(event) => handleCheckboxChange(event, row, 'Control')}\n                                        />\n                                        <span>Compute&Storage</span>\n                                    </label>\n                                </td>\n                                <td styles={styles.tableCell}>\n                                    <button onClick={() => handleDeploy(row)}>Deploy</button>\n                                    {loading && currentNode && currentNode.id === row.id && (\n                                        <div styles={styles.loader}></div>\n                                    )}\n                                    {deploymentCompleted && currentNode && currentNode.id === row.id && (\n                                        <div styles={styles.completed}>Completed</div>\n                                    )}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <div styles={styles.pagination}>\n                    <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n                        Previous\n                    </button>\n                    <button onClick={handleNextPage} disabled={indexOfLastRow >= roles.length}>\n                        Next\n                    </button>\n                </div>\n            </div>\n            <Sidebar />\n        </div>\n\n        {/* BMC Form */}\n        {bmcFormVisible && (\n            <div styles={styles.bmcForm}>\n                <h2>Enter BMC Details for {currentNode.hostname}</h2>\n                <form onSubmit={handleBmcFormSubmit}>\n                    <label>\n                        BMC IP Address:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.ip}\n                            onChange={(e) => setBmcDetails({ ...bmcDetails, ip: e.target.value })}\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Username:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.username}\n                            onChange={(e) => setBmcDetails({ ...bmcDetails, username: e.target.value })}\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Password:\n                        <input\n                            type=\"password\"\n                            value={bmcDetails.password}\n                            onChange={(e) => setBmcDetails({ ...bmcDetails, password: e.target.value })}\n                            required\n                        />\n                    </label>\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                        <button type=\"button\" onClick={handleCancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n        )}\n\n        {/* <Footer /> */}\n    </div>    );\n};\n\nexport default DesignatedNodes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}