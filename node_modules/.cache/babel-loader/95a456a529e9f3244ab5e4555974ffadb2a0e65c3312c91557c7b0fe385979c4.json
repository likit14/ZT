{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\nimport Swal from 'sweetalert2';\nimport validationData from '../Comparison/sample.json';\nimport requirementData from '../Comparison/min_requirements.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Validation = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: '',\n    username: '',\n    password: ''\n  });\n  const [scanResults, setScanResults] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedNodes\n  } = location.state || {\n    selectedNodes: []\n  };\n  useEffect(() => {\n    fetchScanResults();\n  }, []);\n  const fetchScanResults = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/scan');\n      setScanResults(response.data);\n    } catch (error) {\n      console.error('Error fetching scan results:', error);\n    }\n  };\n  const validateNode = node => {\n    setValidatingNode(node);\n    setCurrentNode(node);\n    setBmcDetails({\n      ...bmcDetails,\n      ip: node.ip\n    });\n    setBmcFormVisible(true);\n  };\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }, 100);\n  };\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n  const handleDeploy = () => {\n    navigate('/designatednode', {\n      state: {\n        selectedNodes: selectedRows\n      }\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n      console.log(bmcDetails);\n\n      // Comparison logic\n      const comparisonResults = compareSpecs(validationData, requirementData);\n\n      // Store results in validationResults\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [currentNode.ip]: {\n          status: 'PXE Boot on Progress',\n          cpuCoresPassed: comparisonResults.cpuCoresPassed,\n          memoryPassed: comparisonResults.memoryPassed\n        }\n      }));\n      Swal.fire({\n        title: 'Success',\n        text: 'Enabled Network Boot',\n        confirmButtonText: 'OK',\n        confirmButtonColor: '#28a745'\n      });\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    } catch (error) {\n      console.error('Error setting PXE boot:', error);\n      Swal.fire({\n        title: 'Failed',\n        text: 'Failed to set PXE boot. Please try again.',\n        confirmButtonText: 'OK',\n        confirmButtonColor: '#dc3545'\n      });\n      setBmcFormVisible(false);\n      setFormSubmitted(true);\n    }\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false);\n    setValidatingNode(null);\n  };\n  const handleInfoButtonClick = () => {\n    // Get the current validation result for the node\n    const result = validationResults[currentNode.ip];\n\n    // Determine pass/fail status for CPU and memory\n    const cpuStatus = result.cpuCoresPassed ? \"Passed\" : \"Failed\";\n    const memoryStatus = result.memoryPassed ? \"Passed\" : \"Failed\";\n\n    // Determine heading color based on status\n    const headingColor = cpuStatus === \"Passed\" && memoryStatus === \"Passed\" ? \"#28a745\" : \"#dc3545\";\n\n    // Create HTML message\n    const msg = `\n        <h1 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 20px; color: ${headingColor};\">\n            TEST RESULT: ${cpuStatus === \"Passed\" && memoryStatus === \"Passed\" ? \"PASSED\" : \"FAILED\"}\n        </h1>\n        <div style=\"cursor: pointer; font-size: 1.1rem; color: #007bff; margin-bottom: 10px;\" id=\"toggleReport\">\n            Detailed Report <span id=\"arrow\" style=\"font-size: 1.1rem;\">▼</span>\n        </div>\n        <div id=\"reportWrapper\" style=\"max-height: 0; overflow: hidden; transition: max-height 0.3s ease;\">\n            <table style=\"width:100%; border-collapse: collapse; margin-top: 10px; border-radius: 10px; overflow: hidden;\">\n                <thead style=\"background-color: #f8f9fa;\">\n                    <tr>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">PARAMETER</th>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Result</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">CPU Cores</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${cpuStatus}</td>\n                    </tr>\n                    <tr style=\"background-color: #f8f9fa;\">\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">RAM</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${memoryStatus}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>`;\n\n    // Display the Swal modal\n    Swal.fire({\n      confirmButtonText: 'OK',\n      confirmButtonColor: '#17a2b8',\n      html: msg,\n      didRender: () => {\n        const toggleButton = document.getElementById('toggleReport');\n        const reportWrapper = document.getElementById('reportWrapper');\n        const arrow = document.getElementById('arrow');\n        toggleButton.addEventListener('click', () => {\n          if (reportWrapper.style.maxHeight === '0px') {\n            reportWrapper.style.maxHeight = reportWrapper.scrollHeight + 'px';\n            arrow.textContent = '▲'; // Change arrow to up arrow\n          } else {\n            reportWrapper.style.maxHeight = '0px';\n            arrow.textContent = '▼'; // Change arrow to down arrow\n          }\n        });\n      }\n    });\n  };\n  const compareSpecs = (validationData, requirementData) => {\n    const validationMemory = parseInt(validationData.memory.replace(\" Gi\", \"\"));\n    const validationCpuCores = parseInt(validationData.cpu_cores);\n    const minCpuCores = requirementData.cpu_cores;\n    const minMemory = parseInt(requirementData.memory.replace(\" Gi\", \"\"));\n    return {\n      cpuCoresPassed: validationCpuCores >= minCpuCores,\n      memoryPassed: validationMemory >= minMemory\n    };\n  };\n  const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"data-table-container\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: styles[\"data-table\"],\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Sl No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"IP Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validation Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: styles[\"no-device-message\"],\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"No devices selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 101\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this) : paginatedNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (currentPage - 1) * itemsPerPage + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.ip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                      onClick: () => validateNode(node),\n                      children: validatingNode !== null && validatingNode.ip === node.ip ? 'Validating' : 'Validate'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: 'red',\n                      fontFamily: 'Arial, sans-serif'\n                    },\n                    children: validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: validationResults[node.ip] || formSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleInfoButtonClick,\n                      children: \"Info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 57\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles[\"checkbox-column\"],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: styles[\"checkbox-label\"],\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedRows.some(row => row.ip === node.ip),\n                        onChange: event => handleCheckboxChange(event, node)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: styles[\"checkbox-custom\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 49\n                  }, this)]\n                }, node.ip, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pagination,\n              children: Array.from({\n                length: Math.ceil(selectedNodes.length / itemsPerPage)\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(i + 1),\n                className: styles[currentPage === i + 1 ? 'active' : ''],\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleDeploy,\n              disabled: selectedRows.length === 0,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Enter BMC Details for \", currentNode === null || currentNode === void 0 ? void 0 : currentNode.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles[\"cancel-button\"],\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(Validation, \"R6xdZbrsnl/n0taZ4RHLFzmSWfM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","Sidebar","FontAwesomeIcon","faArrowLeft","styles","Swal","validationData","requirementData","jsxDEV","_jsxDEV","Validation","_s","selectedRows","setSelectedRows","validationResults","setValidationResults","validatingNode","setValidatingNode","currentPage","setCurrentPage","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","ip","username","password","scanResults","setScanResults","formSubmitted","setFormSubmitted","itemsPerPage","navigate","location","selectedNodes","state","fetchScanResults","response","get","data","error","console","validateNode","node","handleBack","setTimeout","window","scrollTo","top","behavior","handleCheckboxChange","event","isChecked","target","checked","filter","selectedRow","handleDeploy","handlePageChange","newPage","handleBmcFormSubmit","preventDefault","post","log","comparisonResults","compareSpecs","prevResults","status","cpuCoresPassed","memoryPassed","fire","title","text","confirmButtonText","confirmButtonColor","handleCancel","handleInfoButtonClick","result","cpuStatus","memoryStatus","headingColor","msg","html","didRender","toggleButton","document","getElementById","reportWrapper","arrow","addEventListener","style","maxHeight","scrollHeight","textContent","validationMemory","parseInt","memory","replace","validationCpuCores","cpu_cores","minCpuCores","minMemory","paginatedNodes","slice","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","main","container","length","colSpan","map","index","disabled","color","fontFamily","type","some","row","onChange","pagination","Array","from","Math","ceil","_","i","visible","onSubmit","value","e","required","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\nimport Swal from 'sweetalert2';\nimport validationData from '../Comparison/sample.json'\nimport requirementData from '../Comparison/min_requirements.json'\n\nconst Validation = () => {\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [validationResults, setValidationResults] = useState({});\n    const [validatingNode, setValidatingNode] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [bmcFormVisible, setBmcFormVisible] = useState(false);\n    const [currentNode, setCurrentNode] = useState(null);\n    const [bmcDetails, setBmcDetails] = useState({ ip: '', username: '', password: '' });\n    const [scanResults, setScanResults] = useState([]);\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    const itemsPerPage = 4;\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { selectedNodes } = location.state || { selectedNodes: [] };\n\n    useEffect(() => {\n        fetchScanResults();\n    }, []);\n\n    const fetchScanResults = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:8000/scan');\n            setScanResults(response.data);\n        } catch (error) {\n            console.error('Error fetching scan results:', error);\n        }\n    };\n\n    const validateNode = (node) => {\n        setValidatingNode(node);\n        setCurrentNode(node);\n        setBmcDetails({ ...bmcDetails, ip: node.ip });\n        setBmcFormVisible(true);\n    };\n\n    const handleBack = () => {\n        navigate(-1);\n        setTimeout(() => {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }, 100);\n    };\n\n    const handleCheckboxChange = (event, node) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, node]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n        }\n    };\n\n    const handleDeploy = () => {\n        navigate('/designatednode', { state: { selectedNodes: selectedRows } });\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handleBmcFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n            const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n            console.log(bmcDetails);\n            \n            // Comparison logic\n            const comparisonResults = compareSpecs(validationData, requirementData);\n    \n            // Store results in validationResults\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [currentNode.ip]: {\n                    status: 'PXE Boot on Progress',\n                    cpuCoresPassed: comparisonResults.cpuCoresPassed,\n                    memoryPassed: comparisonResults.memoryPassed\n                }\n            }));\n    \n            Swal.fire({\n                title: 'Success',\n                text: 'Enabled Network Boot',\n                confirmButtonText: 'OK',\n                confirmButtonColor: '#28a745',\n            });\n    \n            setBmcFormVisible(false);\n            setFormSubmitted(true);\n        } catch (error) {\n            console.error('Error setting PXE boot:', error);\n    \n            Swal.fire({\n                title: 'Failed',\n                text: 'Failed to set PXE boot. Please try again.',\n                confirmButtonText: 'OK',\n                confirmButtonColor: '#dc3545'\n            });\n    \n            setBmcFormVisible(false);\n            setFormSubmitted(true);\n        }\n    };\n\n    const handleCancel = () => {\n        setBmcFormVisible(false);\n        setValidatingNode(null);\n    };\n\nconst handleInfoButtonClick = () => {\n    // Get the current validation result for the node\n    const result = validationResults[currentNode.ip];\n    \n    // Determine pass/fail status for CPU and memory\n    const cpuStatus = result.cpuCoresPassed ? \"Passed\" : \"Failed\";\n    const memoryStatus = result.memoryPassed ? \"Passed\" : \"Failed\";\n    \n    // Determine heading color based on status\n    const headingColor = cpuStatus === \"Passed\" && memoryStatus === \"Passed\" ? \"#28a745\" : \"#dc3545\";\n    \n    // Create HTML message\n    const msg = `\n        <h1 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 20px; color: ${headingColor};\">\n            TEST RESULT: ${cpuStatus === \"Passed\" && memoryStatus === \"Passed\" ? \"PASSED\" : \"FAILED\"}\n        </h1>\n        <div style=\"cursor: pointer; font-size: 1.1rem; color: #007bff; margin-bottom: 10px;\" id=\"toggleReport\">\n            Detailed Report <span id=\"arrow\" style=\"font-size: 1.1rem;\">▼</span>\n        </div>\n        <div id=\"reportWrapper\" style=\"max-height: 0; overflow: hidden; transition: max-height 0.3s ease;\">\n            <table style=\"width:100%; border-collapse: collapse; margin-top: 10px; border-radius: 10px; overflow: hidden;\">\n                <thead style=\"background-color: #f8f9fa;\">\n                    <tr>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">PARAMETER</th>\n                        <th style=\"border: 1px solid #dee2e6; padding: 12px; text-align: left; font-size: 1rem;\">Result</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">CPU Cores</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${cpuStatus}</td>\n                    </tr>\n                    <tr style=\"background-color: #f8f9fa;\">\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">RAM</td>\n                        <td style=\"border: 1px solid #dee2e6; padding: 10px; text-align: left; font-size: 1rem;\">${memoryStatus}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>`;\n\n    // Display the Swal modal\n    Swal.fire({\n        confirmButtonText: 'OK',\n        confirmButtonColor: '#17a2b8',\n        html: msg,\n        didRender: () => {\n            const toggleButton = document.getElementById('toggleReport');\n            const reportWrapper = document.getElementById('reportWrapper');\n            const arrow = document.getElementById('arrow');\n\n            toggleButton.addEventListener('click', () => {\n                if (reportWrapper.style.maxHeight === '0px') {\n                    reportWrapper.style.maxHeight = reportWrapper.scrollHeight + 'px';\n                    arrow.textContent = '▲';  // Change arrow to up arrow\n                } else {\n                    reportWrapper.style.maxHeight = '0px';\n                    arrow.textContent = '▼';  // Change arrow to down arrow\n                }\n            });\n        }\n    });\n};\n    const compareSpecs = (validationData, requirementData) => {\n        const validationMemory = parseInt(validationData.memory.replace(\" Gi\", \"\"));\n        const validationCpuCores = parseInt(validationData.cpu_cores);\n    \n        const minCpuCores = requirementData.cpu_cores;\n        const minMemory = parseInt(requirementData.memory.replace(\" Gi\", \"\"));\n    \n        return {\n            cpuCoresPassed: validationCpuCores >= minCpuCores,\n            memoryPassed: validationMemory >= minMemory\n        };\n    };\n    \n    \n    const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <button className={styles[\"back-button\"]} onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                </button>\n                <center>\n                    <h1>Validation</h1>\n                </center>\n            </div>\n            <div className={styles.main}>\n                <div className={styles[\"data-table-container\"]}>\n                    <div className={styles.container}>\n                        <div>\n                            <table className={styles[\"data-table\"]}>\n                                <thead>\n                                    <tr>\n                                        <th>Sl No.</th>\n                                        <th>IP Address</th>\n                                        <th>Validate</th>\n                                        <th>Validation Result</th>\n                                        <th>Info</th>\n                                        <th>Select</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedNodes.length === 0 ? (\n                                        <tr>\n                                            <td colSpan=\"6\" className={styles[\"no-device-message\"]}><center>No devices selected</center></td>\n                                        </tr>\n                                    ) : (\n                                        paginatedNodes.map((node, index) => (\n                                            <tr key={node.ip}>\n                                                <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                                                <td>{node.ip}</td>\n                                                <td>\n                                                    <button\n                                                        disabled={validatingNode !== null && validatingNode.ip === node.ip}\n                                                        onClick={() => validateNode(node)}\n                                                    >\n                                                        {validatingNode !== null && validatingNode.ip === node.ip ? 'Validating' : 'Validate'}\n                                                    </button>\n                                                </td>\n                                                <td style={{ color: 'red', fontFamily: 'Arial, sans-serif' }}>\n                                                    {validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'}\n                                                </td>\n                                                <td>\n                                                    {(validationResults[node.ip] || formSubmitted) ? (\n                                                        <button onClick={handleInfoButtonClick}>Info</button>\n                                                    ) : null}\n                                                </td>\n                                                <td className={styles[\"checkbox-column\"]}>\n                                                    <label className={styles[\"checkbox-label\"]}>\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={selectedRows.some(row => row.ip === node.ip)}\n                                                            onChange={(event) => handleCheckboxChange(event, node)}\n                                                        />\n                                                        <span className={styles[\"checkbox-custom\"]}></span>\n                                                    </label>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    )}\n                                </tbody>\n                            </table>\n\n                            <div className={styles.pagination}>\n                                {Array.from({ length: Math.ceil(selectedNodes.length / itemsPerPage) }, (_, i) => (\n                                    <button\n                                        key={i}\n                                        onClick={() => handlePageChange(i + 1)}\n                                        className={styles[currentPage === i + 1 ? 'active' : '']}\n                                    >\n                                        {i + 1}\n                                    </button>\n                                ))}\n                            </div>\n                            <button\n                                className=\"next-button\"\n                                onClick={handleDeploy}\n                                disabled={selectedRows.length === 0}\n                            >\n                                <strong>Next</strong>\n                            </button>\n                        </div>\n                        <Sidebar />\n                    </div>\n                </div>\n            </div>\n\n            {/* BMC Form */}\n            <div className={`${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : ''}`}>\n                <h2><strong>Enter BMC Details for {currentNode?.ip}</strong></h2>\n                <form onSubmit={handleBmcFormSubmit}>\n                    <label>\n                        BMC IP Address:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.ip}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, ip: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Username:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.username}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, username: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Password:\n                        <input\n                            type=\"password\"\n                            value={bmcDetails.password}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, password: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                        <button type=\"button\" className={styles[\"cancel-button\"]} onClick={handleCancel}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Validation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}