{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API requests\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Validation = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: '',\n    username: '',\n    password: ''\n  });\n  const [scanResults, setScanResults] = useState([]); // State to store scan results\n\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedNodes\n  } = location.state || {\n    selectedNodes: []\n  };\n  useEffect(() => {\n    // Fetch initial scan results when the component mounts\n    fetchScanResults();\n  }, []);\n  const fetchScanResults = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/scan');\n      setScanResults(response.data);\n    } catch (error) {\n      console.error('Error fetching scan results:', error);\n    }\n  };\n  const validateNode = async node => {\n    setValidatingNode(node);\n    setCurrentNode(node);\n    setBmcDetails({\n      ...bmcDetails,\n      ip: node.ip\n    }); // Set the BMC IP to the current node's IP\n    setBmcFormVisible(true);\n\n    // Start validation process\n    try {\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: {\n          status: 'loading',\n          message: ''\n        }\n      }));\n      const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: {\n          status: 'success',\n          message: response.data.message\n        }\n      }));\n    } catch (error) {\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: {\n          status: 'failure',\n          message: 'Failed to set PXE boot. Please try again.'\n        }\n      }));\n    } finally {\n      setValidatingNode(null); // Reset validating node state after validation\n    }\n  };\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }, 100);\n  };\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n  const handleDeploy = () => {\n    navigate('/designatednode', {\n      state: {\n        selectedNodes: selectedRows\n      }\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n      alert(response.data.message); // Show a success message or handle as needed\n    } catch (error) {\n      console.error('Error setting PXE boot:', error);\n      alert('Failed to set PXE boot. Please try again.');\n    }\n    setBmcFormVisible(false); // Hide the form after submission\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false); // Hide the form when canceled\n    setValidatingNode(null); // Reset validating node state\n  };\n  const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"data-table-container\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: styles[\"data-table\"],\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Sl No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"IP Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validation Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: styles[\"no-device-message\"],\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"No devices selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 101\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this) : paginatedNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (currentPage - 1) * itemsPerPage + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.ip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                      onClick: () => validateNode(node),\n                      children: validatingNode !== null && validatingNode.ip === node.ip ? 'Validating' : 'Validate'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: 'red',\n                      fontFamily: 'Arial, sans-serif'\n                    },\n                    children: validationResults[node.ip] ? validationResults[node.ip].status === 'loading' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.loadingSymbol,\n                      children: [\" \", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 61\n                    }, this) : validationResults[node.ip].status === 'success' ? 'Success' : validationResults[node.ip].status === 'failure' ? 'Failure' : 'Not validated' : 'Not validated'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: validationResults[node.ip] && validationResults[node.ip].status === 'failure' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => alert(validationResults[node.ip].message),\n                      children: \"Info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles[\"checkbox-column\"],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: styles[\"checkbox-label\"],\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedRows.some(row => row.ip === node.ip),\n                        onChange: event => handleCheckboxChange(event, node)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: styles[\"checkbox-custom\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 49\n                  }, this)]\n                }, node.ip, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pagination,\n              children: Array.from({\n                length: Math.ceil(selectedNodes.length / itemsPerPage)\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(i + 1),\n                className: styles[currentPage === i + 1 ? 'active' : ''],\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleDeploy,\n              disabled: selectedRows.length === 0,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Enter BMC Details for \", currentNode === null || currentNode === void 0 ? void 0 : currentNode.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles[\"cancel-button\"],\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(Validation, \"oz9PL6hyWcGoicD2fzbyiDmzGyE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","Sidebar","FontAwesomeIcon","faArrowLeft","styles","jsxDEV","_jsxDEV","Validation","_s","selectedRows","setSelectedRows","validationResults","setValidationResults","validatingNode","setValidatingNode","currentPage","setCurrentPage","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","ip","username","password","scanResults","setScanResults","itemsPerPage","navigate","location","selectedNodes","state","fetchScanResults","response","get","data","error","console","validateNode","node","prevResults","status","message","post","handleBack","setTimeout","window","scrollTo","top","behavior","handleCheckboxChange","event","isChecked","target","checked","filter","selectedRow","handleDeploy","handlePageChange","newPage","handleBmcFormSubmit","preventDefault","alert","handleCancel","paginatedNodes","slice","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","main","container","length","colSpan","map","index","disabled","style","color","fontFamily","loadingSymbol","type","some","row","onChange","pagination","Array","from","Math","ceil","_","i","visible","onSubmit","value","e","required","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API requests\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\n\nconst Validation = () => {\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [validationResults, setValidationResults] = useState({});\n    const [validatingNode, setValidatingNode] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [bmcFormVisible, setBmcFormVisible] = useState(false);\n    const [currentNode, setCurrentNode] = useState(null);\n    const [bmcDetails, setBmcDetails] = useState({ ip: '', username: '', password: '' });\n    const [scanResults, setScanResults] = useState([]); // State to store scan results\n\n    const itemsPerPage = 4;\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { selectedNodes } = location.state || { selectedNodes: [] };\n\n    useEffect(() => {\n        // Fetch initial scan results when the component mounts\n        fetchScanResults();\n    }, []);\n\n    const fetchScanResults = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:8000/scan');\n            setScanResults(response.data);\n        } catch (error) {\n            console.error('Error fetching scan results:', error);\n        }\n    };\n\n    const validateNode = async (node) => {\n        setValidatingNode(node);\n        setCurrentNode(node);\n        setBmcDetails({ ...bmcDetails, ip: node.ip }); // Set the BMC IP to the current node's IP\n        setBmcFormVisible(true);\n\n        // Start validation process\n        try {\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: { status: 'loading', message: '' }\n            }));\n\n            const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: { status: 'success', message: response.data.message }\n            }));\n        } catch (error) {\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: { status: 'failure', message: 'Failed to set PXE boot. Please try again.' }\n            }));\n        } finally {\n            setValidatingNode(null); // Reset validating node state after validation\n        }\n    };\n\n    const handleBack = () => {\n        navigate(-1);\n        setTimeout(() => {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }, 100);\n    };\n\n    const handleCheckboxChange = (event, node) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, node]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n        }\n    };\n\n    const handleDeploy = () => {\n        navigate('/designatednode', { state: { selectedNodes: selectedRows } });\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handleBmcFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n            alert(response.data.message); // Show a success message or handle as needed\n        } catch (error) {\n            console.error('Error setting PXE boot:', error);\n            alert('Failed to set PXE boot. Please try again.');\n        }\n        setBmcFormVisible(false); // Hide the form after submission\n    };\n\n    const handleCancel = () => {\n        setBmcFormVisible(false); // Hide the form when canceled\n        setValidatingNode(null); // Reset validating node state\n    };\n\n    const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <button className={styles[\"back-button\"]} onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                </button>\n                <center>\n                    <h1>Validation</h1>\n                </center>\n            </div>\n            <div className={styles.main}>\n                <div className={styles[\"data-table-container\"]}>\n                    <div className={styles.container}>\n                        <div>\n                            <table className={styles[\"data-table\"]}>\n                                <thead>\n                                    <tr>\n                                        <th>Sl No.</th>\n                                        <th>IP Address</th>\n                                        <th>Validate</th>\n                                        <th>Validation Result</th>\n                                        <th>Info</th>\n                                        <th>Select</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedNodes.length === 0 ? (\n                                        <tr>\n                                            <td colSpan=\"6\" className={styles[\"no-device-message\"]}><center>No devices selected</center></td>\n                                        </tr>\n                                    ) : (\n                                        paginatedNodes.map((node, index) => (\n                                            <tr key={node.ip}>\n                                                <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                                                <td>{node.ip}</td>\n                                                <td>\n                                                    <button \n                                                        disabled={validatingNode !== null && validatingNode.ip === node.ip}\n                                                        onClick={() => validateNode(node)}\n                                                    >\n                                                        {validatingNode !== null && validatingNode.ip === node.ip ? 'Validating' : 'Validate'}\n                                                    </button>\n                                                </td>\n                                                <td style={{ color: 'red', fontFamily: 'Arial, sans-serif' }}>\n                                                    {validationResults[node.ip] ? (\n                                                        validationResults[node.ip].status === 'loading' ? (\n                                                            <div className={styles.loadingSymbol}> {/* Add your loading symbol here */} </div>\n                                                        ) : validationResults[node.ip].status === 'success' ? (\n                                                            'Success'\n                                                        ) : validationResults[node.ip].status === 'failure' ? (\n                                                            'Failure'\n                                                        ) : (\n                                                            'Not validated'\n                                                        )\n                                                    ) : 'Not validated'}\n                                                </td>\n                                                <td>\n                                                    {validationResults[node.ip] && validationResults[node.ip].status === 'failure' && (\n                                                        <button onClick={() => alert(validationResults[node.ip].message)}>Info</button>\n                                                    )}\n                                                </td>\n                                                <td className={styles[\"checkbox-column\"]}>\n                                                    <label className={styles[\"checkbox-label\"]}>\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={selectedRows.some(row => row.ip === node.ip)}\n                                                            onChange={(event) => handleCheckboxChange(event, node)}\n                                                        />\n                                                        <span className={styles[\"checkbox-custom\"]}></span>\n                                                    </label>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    )}\n                                </tbody>\n                            </table>\n\n                            <div className={styles.pagination}>\n                                {Array.from({ length: Math.ceil(selectedNodes.length / itemsPerPage) }, (_, i) => (\n                                    <button\n                                        key={i}\n                                        onClick={() => handlePageChange(i + 1)}\n                                        className={styles[currentPage === i + 1 ? 'active' : '']}\n                                    >\n                                        {i + 1}\n                                    </button>    \n                                ))}\n                            </div>\n                            <button\n                                className=\"next-button\"\n                                onClick={handleDeploy}\n                                disabled={selectedRows.length === 0}\n                            >\n                                <strong>Next</strong>\n                            </button>\n                        </div>\n                        <Sidebar />\n                    </div>\n                </div>\n            </div>\n\n            {/* BMC Form */}\n            <div className={`${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : ''}`}>\n                <h2><strong>Enter BMC Details for {currentNode?.ip}</strong></h2>\n                <form onSubmit={handleBmcFormSubmit}>\n                    <label>\n                        BMC IP Address:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.ip}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, ip: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Username:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.username}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, username: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Password:\n                        <input\n                            type=\"password\"\n                            value={bmcDetails.password}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, password: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                        <button type=\"button\" className={styles[\"cancel-button\"]} onClick={handleCancel}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Validation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}