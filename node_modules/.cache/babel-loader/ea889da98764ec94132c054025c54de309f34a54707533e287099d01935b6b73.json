{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Validation = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [deploymentCompleted, setDeploymentCompleted] = useState(false);\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedNodes\n  } = location.state || {\n    selectedNodes: []\n  };\n  const validateNode = async node => {\n    setValidatingNode(node);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/validate', {\n        ip: node.ip\n      });\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: response.data\n      }));\n    } catch (error) {\n      console.error('Error validating node:', error);\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: {\n          status: 'failure',\n          message: 'Validation failed due to an error.'\n        }\n      }));\n    } finally {\n      setValidatingNode(null);\n    }\n  };\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }, 100);\n  };\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n  const handleDeploy = () => {\n    navigate('/designatednode', {\n      state: {\n        selectedNodes: selectedRows\n      }\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleShowBmcForm = node => {\n    setCurrentNode(node);\n    setBmcFormVisible(true);\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/set_pxe_boot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...bmcDetails,\n          role: currentNode.roles[0]\n        }) // Assuming only one role is selected\n      });\n      const result = await response.json();\n      console.log(result);\n      setDeploymentCompleted(true);\n      setBmcDetails({\n        ip: \"\",\n        username: \"\",\n        password: \"\"\n      });\n      setBmcFormVisible(false);\n      navigate(\"/deploymentinfo\");\n    } catch (error) {\n      console.error(\"Deployment error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false);\n    setLoading(false);\n  };\n  const indexOfLastRow = currentPage * itemsPerPage;\n  const indexOfFirstRow = indexOfLastRow - itemsPerPage;\n  const currentRows = selectedNodes.slice(indexOfFirstRow, indexOfLastRow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"data-table-container\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: styles[\"data-table\"],\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sl No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"IP Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Validate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Validation Result\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: selectedNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  className: styles[\"no-device-message\"],\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: \"No devices selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 97\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this) : paginatedNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (currentPage - 1) * itemsPerPage + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: node.ip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                    onClick: () => validateNode(node),\n                    children: validatingNode !== null && validatingNode.ip === node.ip ? 'Validating...' : 'Validate'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 49\n                  }, this), validationResults[node.ip] && validationResults[node.ip].status === 'success' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleShowBmcForm(node),\n                    children: \"Configure BMC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: 'red',\n                    fontFamily: 'Arial, sans-serif'\n                  },\n                  children: validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: validationResults[node.ip] && validationResults[node.ip].status === 'failure' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => alert(validationResults[node.ip].message),\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: styles[\"checkbox-column\"],\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: styles[\"checkbox-label\"],\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: selectedRows.some(row => row.ip === node.ip),\n                      onChange: event => handleCheckboxChange(event, node)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: styles[\"checkbox-custom\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 45\n                }, this)]\n              }, node.ip, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.pagination,\n            children: Array.from({\n              length: Math.ceil(selectedNodes.length / itemsPerPage)\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePageChange(i + 1),\n              className: styles[currentPage === i + 1 ? 'active' : ''],\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"next-button\"],\n            onClick: handleDeploy,\n            disabled: selectedRows.length === 0,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), bmcFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"bmc-form\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Enter BMC Details for \", currentNode.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'Submitting...' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(Validation, \"Y4HyHjQdXxMTP9HdY8qmBseKQIM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","axios","Sidebar","FontAwesomeIcon","faArrowLeft","styles","jsxDEV","_jsxDEV","Validation","_s","selectedRows","setSelectedRows","validationResults","setValidationResults","validatingNode","setValidatingNode","currentPage","setCurrentPage","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","ip","username","password","loading","setLoading","deploymentCompleted","setDeploymentCompleted","itemsPerPage","navigate","location","selectedNodes","state","validateNode","node","response","post","prevResults","data","error","console","status","message","handleBack","setTimeout","window","scrollTo","top","behavior","handleCheckboxChange","event","isChecked","target","checked","filter","selectedRow","handleDeploy","paginatedNodes","slice","handlePageChange","newPage","handleShowBmcForm","handleBmcFormSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","role","roles","result","json","log","handleCancel","indexOfLastRow","indexOfFirstRow","currentRows","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","main","container","length","colSpan","map","index","disabled","style","color","fontFamily","alert","type","some","row","onChange","pagination","Array","from","Math","ceil","_","i","onSubmit","value","e","required","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\n\nconst Validation = () => {\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [validationResults, setValidationResults] = useState({});\n    const [validatingNode, setValidatingNode] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [bmcFormVisible, setBmcFormVisible] = useState(false);\n    const [currentNode, setCurrentNode] = useState(null);\n    const [bmcDetails, setBmcDetails] = useState({\n        ip: \"\",\n        username: \"\",\n        password: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [deploymentCompleted, setDeploymentCompleted] = useState(false);\n    const itemsPerPage = 4;\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { selectedNodes } = location.state || { selectedNodes: [] };\n\n    const validateNode = async (node) => {\n        setValidatingNode(node);\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/validate', { ip: node.ip });\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: response.data\n            }));\n        } catch (error) {\n            console.error('Error validating node:', error);\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: { status: 'failure', message: 'Validation failed due to an error.' }\n            }));\n        } finally {\n            setValidatingNode(null);\n        }\n    };\n\n    const handleBack = () => {\n        navigate(-1);\n        setTimeout(() => {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }, 100);\n    };\n\n    const handleCheckboxChange = (event, node) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, node]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n        }\n    };\n\n    const handleDeploy = () => {\n        navigate('/designatednode', { state: { selectedNodes: selectedRows } });\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handleShowBmcForm = (node) => {\n        setCurrentNode(node);\n        setBmcFormVisible(true);\n    };\n\n    const handleBmcFormSubmit = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n\n        try {\n            const response = await fetch(\"http://localhost:8000/set_pxe_boot\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ ...bmcDetails, role: currentNode.roles[0] }), // Assuming only one role is selected\n            });\n\n            const result = await response.json();\n            console.log(result);\n\n            setDeploymentCompleted(true);\n\n            setBmcDetails({\n                ip: \"\",\n                username: \"\",\n                password: \"\",\n            });\n\n            setBmcFormVisible(false);\n            navigate(\"/deploymentinfo\");\n        } catch (error) {\n            console.error(\"Deployment error:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCancel = () => {\n        setBmcFormVisible(false);\n        setLoading(false);\n    };\n\n    const indexOfLastRow = currentPage * itemsPerPage;\n    const indexOfFirstRow = indexOfLastRow - itemsPerPage;\n    const currentRows = selectedNodes.slice(indexOfFirstRow, indexOfLastRow);\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <button className={styles[\"back-button\"]} onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                </button>\n                <center>\n                    <h1>Validation</h1>\n                </center>\n            </div>\n            <div className={styles.main}>\n                <div className={styles[\"data-table-container\"]}>\n                    <div className={styles.container}>\n                        <table className={styles[\"data-table\"]}>\n                            <thead>\n                                <tr>\n                                    <th>Sl No.</th>\n                                    <th>IP Address</th>\n                                    <th>Validate</th>\n                                    <th>Validation Result</th>\n                                    <th>Info</th>\n                                    <th>Select</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {selectedNodes.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"6\" className={styles[\"no-device-message\"]}><center>No devices selected</center></td>\n                                    </tr>\n                                ) : (\n                                    paginatedNodes.map((node, index) => (\n                                        <tr key={node.ip}>\n                                            <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                                            <td>{node.ip}</td>\n                                            <td>\n                                                <button \n                                                    disabled={validatingNode !== null && validatingNode.ip === node.ip}\n                                                    onClick={() => validateNode(node)}\n                                                >\n                                                    {validatingNode !== null && validatingNode.ip === node.ip ? 'Validating...' : 'Validate'}\n                                                </button>\n                                                {validationResults[node.ip] && validationResults[node.ip].status === 'success' && (\n                                                    <button onClick={() => handleShowBmcForm(node)}>Configure BMC</button>\n                                                )}\n                                            </td>\n                                            <td style={{ color: 'red', fontFamily: 'Arial, sans-serif' }}>\n                                                {validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'}\n                                            </td>\n                                            <td>\n                                                {validationResults[node.ip] && validationResults[node.ip].status === 'failure' && (\n                                                    <button onClick={() => alert(validationResults[node.ip].message)}>Info</button>\n                                                )}\n                                            </td>\n                                            <td className={styles[\"checkbox-column\"]}>\n                                                <label className={styles[\"checkbox-label\"]}>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        checked={selectedRows.some(row => row.ip === node.ip)}\n                                                        onChange={(event) => handleCheckboxChange(event, node)}\n                                                    />\n                                                    <span className={styles[\"checkbox-custom\"]}></span>\n                                                </label>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                            </tbody>\n                        </table>\n\n                        <div className={styles.pagination}>\n                            {Array.from({ length: Math.ceil(selectedNodes.length / itemsPerPage) }, (_, i) => (\n                                <button\n                                    key={i}\n                                    onClick={() => handlePageChange(i + 1)}\n                                    className={styles[currentPage === i + 1 ? 'active' : '']}\n                                >\n                                    {i + 1}\n                                </button>    \n                            ))}\n                        </div>\n                        <button\n                            className={styles[\"next-button\"]}\n                            onClick={handleDeploy}\n                            disabled={selectedRows.length === 0}\n                        >\n                            <strong>Next</strong>\n                        </button>\n                    </div>\n                    <Sidebar />\n                </div>\n            </div>\n\n            {/* BMC Form */}\n            {bmcFormVisible && (\n                <div className={styles[\"bmc-form\"]}>\n                    <h2><strong>Enter BMC Details for {currentNode.ip}</strong></h2>\n                    <form onSubmit={handleBmcFormSubmit}>\n                        <label>\n                            BMC IP Address:\n                            <input\n                                type=\"text\"\n                                value={bmcDetails.ip}\n                                onChange={(e) =>\n                                    setBmcDetails({ ...bmcDetails, ip: e.target.value })\n                                }\n                                required\n                            />\n                        </label>\n                        <label>\n                            BMC Username:\n                            <input\n                                type=\"text\"\n                                value={bmcDetails.username}\n                                onChange={(e) =>\n                                    setBmcDetails({ ...bmcDetails, username: e.target.value })\n                                }\n                                required\n                            />\n                        </label>\n                        <label>\n                            BMC Password:\n                            <input\n                                type=\"password\"\n                                value={bmcDetails.password}\n                                onChange={(e) =>\n                                    setBmcDetails({ ...bmcDetails, password: e.target.value })\n                                }\n                                required\n                            />\n                        </label>\n                        <div>\n                            <button type=\"submit\" disabled={loading}>\n                                {loading ? 'Submitting...' : 'Submit'}\n                            </button>\n                            <button type=\"button\" onClick={handleCancel}>Cancel</button>\n                        </div>\n                    </form>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Validation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,MAAM,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC;IACzC0B,EAAE,EAAE,EAAE;IACNC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAMiC,YAAY,GAAG,CAAC;EACtB,MAAMC,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAC9B,MAAMiC,QAAQ,GAAGlC,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEmC;EAAc,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI;IAAED,aAAa,EAAE;EAAG,CAAC;EAEjE,MAAME,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjCtB,iBAAiB,CAACsB,IAAI,CAAC;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,IAAI,CAAC,gCAAgC,EAAE;QAAEf,EAAE,EAAEa,IAAI,CAACb;MAAG,CAAC,CAAC;MACpFX,oBAAoB,CAAC2B,WAAW,KAAK;QACjC,GAAGA,WAAW;QACd,CAACH,IAAI,CAACb,EAAE,GAAGc,QAAQ,CAACG;MACxB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C7B,oBAAoB,CAAC2B,WAAW,KAAK;QACjC,GAAGA,WAAW;QACd,CAACH,IAAI,CAACb,EAAE,GAAG;UAAEoB,MAAM,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAqC;MAClF,CAAC,CAAC,CAAC;IACP,CAAC,SAAS;MACN9B,iBAAiB,CAAC,IAAI,CAAC;IAC3B;EACJ,CAAC;EAED,MAAM+B,UAAU,GAAGA,CAAA,KAAM;IACrBd,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZe,UAAU,CAAC,MAAM;MACbC,MAAM,CAACC,QAAQ,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACnD,CAAC,EAAE,GAAG,CAAC;EACX,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAEhB,IAAI,KAAK;IAC1C,MAAMiB,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,OAAO;IACtC,IAAIF,SAAS,EAAE;MACX3C,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE2B,IAAI,CAAC,CAAC;IAC5C,CAAC,MAAM;MACH1B,eAAe,CAACD,YAAY,CAAC+C,MAAM,CAACC,WAAW,IAAIA,WAAW,CAAClC,EAAE,KAAKa,IAAI,CAACb,EAAE,CAAC,CAAC;IACnF;EACJ,CAAC;EAED,MAAMmC,YAAY,GAAGA,CAAA,KAAM;IACvB3B,QAAQ,CAAC,iBAAiB,EAAE;MAAEG,KAAK,EAAE;QAAED,aAAa,EAAExB;MAAa;IAAE,CAAC,CAAC;IACvEsC,MAAM,CAACC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACnD,CAAC;EAED,MAAMS,cAAc,GAAG1B,aAAa,CAAC2B,KAAK,CAAC,CAAC7C,WAAW,GAAG,CAAC,IAAIe,YAAY,EAAEf,WAAW,GAAGe,YAAY,CAAC;EAExG,MAAM+B,gBAAgB,GAAIC,OAAO,IAAK;IAClC9C,cAAc,CAAC8C,OAAO,CAAC;IACvBf,MAAM,CAACC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACnD,CAAC;EAED,MAAMa,iBAAiB,GAAI3B,IAAI,IAAK;IAChChB,cAAc,CAACgB,IAAI,CAAC;IACpBlB,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM8C,mBAAmB,GAAG,MAAOZ,KAAK,IAAK;IACzCA,KAAK,CAACa,cAAc,CAAC,CAAC;IACtBtC,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAM6B,KAAK,CAAC,oCAAoC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,GAAGlD,UAAU;UAAEmD,IAAI,EAAErD,WAAW,CAACsD,KAAK,CAAC,CAAC;QAAE,CAAC,CAAC,CAAE;MACzE,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,MAAMrC,QAAQ,CAACsC,IAAI,CAAC,CAAC;MACpCjC,OAAO,CAACkC,GAAG,CAACF,MAAM,CAAC;MAEnB7C,sBAAsB,CAAC,IAAI,CAAC;MAE5BP,aAAa,CAAC;QACVC,EAAE,EAAE,EAAE;QACNC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd,CAAC,CAAC;MAEFP,iBAAiB,CAAC,KAAK,CAAC;MACxBa,QAAQ,CAAC,iBAAiB,CAAC;IAC/B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC7C,CAAC,SAAS;MACNd,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMkD,YAAY,GAAGA,CAAA,KAAM;IACvB3D,iBAAiB,CAAC,KAAK,CAAC;IACxBS,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMmD,cAAc,GAAG/D,WAAW,GAAGe,YAAY;EACjD,MAAMiD,eAAe,GAAGD,cAAc,GAAGhD,YAAY;EACrD,MAAMkD,WAAW,GAAG/C,aAAa,CAAC2B,KAAK,CAACmB,eAAe,EAAED,cAAc,CAAC;EAExE,oBACIxE,OAAA;IAAA2E,QAAA,gBACI3E,OAAA;MAAK4E,SAAS,EAAE9E,MAAM,CAAC+E,MAAO;MAAAF,QAAA,gBAC1B3E,OAAA;QAAQ4E,SAAS,EAAE9E,MAAM,CAAC,aAAa,CAAE;QAACgF,OAAO,EAAEvC,UAAW;QAAAoC,QAAA,eAC1D3E,OAAA,CAACJ,eAAe;UAACmF,IAAI,EAAElF,WAAY;UAACmF,IAAI,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACTpF,OAAA;QAAA2E,QAAA,eACI3E,OAAA;UAAA2E,QAAA,EAAI;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNpF,OAAA;MAAK4E,SAAS,EAAE9E,MAAM,CAACuF,IAAK;MAAAV,QAAA,eACxB3E,OAAA;QAAK4E,SAAS,EAAE9E,MAAM,CAAC,sBAAsB,CAAE;QAAA6E,QAAA,gBAC3C3E,OAAA;UAAK4E,SAAS,EAAE9E,MAAM,CAACwF,SAAU;UAAAX,QAAA,gBAC7B3E,OAAA;YAAO4E,SAAS,EAAE9E,MAAM,CAAC,YAAY,CAAE;YAAA6E,QAAA,gBACnC3E,OAAA;cAAA2E,QAAA,eACI3E,OAAA;gBAAA2E,QAAA,gBACI3E,OAAA;kBAAA2E,QAAA,EAAI;gBAAM;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACfpF,OAAA;kBAAA2E,QAAA,EAAI;gBAAU;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnBpF,OAAA;kBAAA2E,QAAA,EAAI;gBAAQ;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjBpF,OAAA;kBAAA2E,QAAA,EAAI;gBAAiB;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC1BpF,OAAA;kBAAA2E,QAAA,EAAI;gBAAI;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACbpF,OAAA;kBAAA2E,QAAA,EAAI;gBAAM;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACRpF,OAAA;cAAA2E,QAAA,EACKhD,aAAa,CAAC4D,MAAM,KAAK,CAAC,gBACvBvF,OAAA;gBAAA2E,QAAA,eACI3E,OAAA;kBAAIwF,OAAO,EAAC,GAAG;kBAACZ,SAAS,EAAE9E,MAAM,CAAC,mBAAmB,CAAE;kBAAA6E,QAAA,eAAC3E,OAAA;oBAAA2E,QAAA,EAAQ;kBAAmB;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjG,CAAC,GAEL/B,cAAc,CAACoC,GAAG,CAAC,CAAC3D,IAAI,EAAE4D,KAAK,kBAC3B1F,OAAA;gBAAA2E,QAAA,gBACI3E,OAAA;kBAAA2E,QAAA,EAAK,CAAClE,WAAW,GAAG,CAAC,IAAIe,YAAY,GAAGkE,KAAK,GAAG;gBAAC;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvDpF,OAAA;kBAAA2E,QAAA,EAAK7C,IAAI,CAACb;gBAAE;kBAAAgE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAClBpF,OAAA;kBAAA2E,QAAA,gBACI3E,OAAA;oBACI2F,QAAQ,EAAEpF,cAAc,KAAK,IAAI,IAAIA,cAAc,CAACU,EAAE,KAAKa,IAAI,CAACb,EAAG;oBACnE6D,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAACC,IAAI,CAAE;oBAAA6C,QAAA,EAEjCpE,cAAc,KAAK,IAAI,IAAIA,cAAc,CAACU,EAAE,KAAKa,IAAI,CAACb,EAAE,GAAG,eAAe,GAAG;kBAAU;oBAAAgE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpF,CAAC,EACR/E,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,IAAIZ,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,CAACoB,MAAM,KAAK,SAAS,iBAC1ErC,OAAA;oBAAQ8E,OAAO,EAAEA,CAAA,KAAMrB,iBAAiB,CAAC3B,IAAI,CAAE;oBAAA6C,QAAA,EAAC;kBAAa;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CACxE;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACLpF,OAAA;kBAAI4F,KAAK,EAAE;oBAAEC,KAAK,EAAE,KAAK;oBAAEC,UAAU,EAAE;kBAAoB,CAAE;kBAAAnB,QAAA,EACxDtE,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,GAAGZ,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,CAACoB,MAAM,GAAG;gBAAe;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjF,CAAC,eACLpF,OAAA;kBAAA2E,QAAA,EACKtE,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,IAAIZ,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,CAACoB,MAAM,KAAK,SAAS,iBAC1ErC,OAAA;oBAAQ8E,OAAO,EAAEA,CAAA,KAAMiB,KAAK,CAAC1F,iBAAiB,CAACyB,IAAI,CAACb,EAAE,CAAC,CAACqB,OAAO,CAAE;oBAAAqC,QAAA,EAAC;kBAAI;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBACjF;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACLpF,OAAA;kBAAI4E,SAAS,EAAE9E,MAAM,CAAC,iBAAiB,CAAE;kBAAA6E,QAAA,eACrC3E,OAAA;oBAAO4E,SAAS,EAAE9E,MAAM,CAAC,gBAAgB,CAAE;oBAAA6E,QAAA,gBACvC3E,OAAA;sBACIgG,IAAI,EAAC,UAAU;sBACf/C,OAAO,EAAE9C,YAAY,CAAC8F,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACjF,EAAE,KAAKa,IAAI,CAACb,EAAE,CAAE;sBACtDkF,QAAQ,EAAGrD,KAAK,IAAKD,oBAAoB,CAACC,KAAK,EAAEhB,IAAI;oBAAE;sBAAAmD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1D,CAAC,eACFpF,OAAA;sBAAM4E,SAAS,EAAE9E,MAAM,CAAC,iBAAiB;oBAAE;sBAAAmF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChD;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC;cAAA,GA/BAtD,IAAI,CAACb,EAAE;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgCZ,CACP;YACJ;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAERpF,OAAA;YAAK4E,SAAS,EAAE9E,MAAM,CAACsG,UAAW;YAAAzB,QAAA,EAC7B0B,KAAK,CAACC,IAAI,CAAC;cAAEf,MAAM,EAAEgB,IAAI,CAACC,IAAI,CAAC7E,aAAa,CAAC4D,MAAM,GAAG/D,YAAY;YAAE,CAAC,EAAE,CAACiF,CAAC,EAAEC,CAAC,kBACzE1G,OAAA;cAEI8E,OAAO,EAAEA,CAAA,KAAMvB,gBAAgB,CAACmD,CAAC,GAAG,CAAC,CAAE;cACvC9B,SAAS,EAAE9E,MAAM,CAACW,WAAW,KAAKiG,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAE;cAAA/B,QAAA,EAExD+B,CAAC,GAAG;YAAC,GAJDA,CAAC;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKF,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNpF,OAAA;YACI4E,SAAS,EAAE9E,MAAM,CAAC,aAAa,CAAE;YACjCgF,OAAO,EAAE1B,YAAa;YACtBuC,QAAQ,EAAExF,YAAY,CAACoF,MAAM,KAAK,CAAE;YAAAZ,QAAA,eAEpC3E,OAAA;cAAA2E,QAAA,EAAQ;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACNpF,OAAA,CAACL,OAAO;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGLzE,cAAc,iBACXX,OAAA;MAAK4E,SAAS,EAAE9E,MAAM,CAAC,UAAU,CAAE;MAAA6E,QAAA,gBAC/B3E,OAAA;QAAA2E,QAAA,eAAI3E,OAAA;UAAA2E,QAAA,GAAQ,wBAAsB,EAAC9D,WAAW,CAACI,EAAE;QAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChEpF,OAAA;QAAM2G,QAAQ,EAAEjD,mBAAoB;QAAAiB,QAAA,gBAChC3E,OAAA;UAAA2E,QAAA,GAAO,iBAEH,eAAA3E,OAAA;YACIgG,IAAI,EAAC,MAAM;YACXY,KAAK,EAAE7F,UAAU,CAACE,EAAG;YACrBkF,QAAQ,EAAGU,CAAC,IACR7F,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEE,EAAE,EAAE4F,CAAC,CAAC7D,MAAM,CAAC4D;YAAM,CAAC,CACtD;YACDE,QAAQ;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACRpF,OAAA;UAAA2E,QAAA,GAAO,eAEH,eAAA3E,OAAA;YACIgG,IAAI,EAAC,MAAM;YACXY,KAAK,EAAE7F,UAAU,CAACG,QAAS;YAC3BiF,QAAQ,EAAGU,CAAC,IACR7F,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEG,QAAQ,EAAE2F,CAAC,CAAC7D,MAAM,CAAC4D;YAAM,CAAC,CAC5D;YACDE,QAAQ;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACRpF,OAAA;UAAA2E,QAAA,GAAO,eAEH,eAAA3E,OAAA;YACIgG,IAAI,EAAC,UAAU;YACfY,KAAK,EAAE7F,UAAU,CAACI,QAAS;YAC3BgF,QAAQ,EAAGU,CAAC,IACR7F,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEI,QAAQ,EAAE0F,CAAC,CAAC7D,MAAM,CAAC4D;YAAM,CAAC,CAC5D;YACDE,QAAQ;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACRpF,OAAA;UAAA2E,QAAA,gBACI3E,OAAA;YAAQgG,IAAI,EAAC,QAAQ;YAACL,QAAQ,EAAEvE,OAAQ;YAAAuD,QAAA,EACnCvD,OAAO,GAAG,eAAe,GAAG;UAAQ;YAAA6D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACTpF,OAAA;YAAQgG,IAAI,EAAC,QAAQ;YAAClB,OAAO,EAAEP,YAAa;YAAAI,QAAA,EAAC;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClF,EAAA,CA9PID,UAAU;EAAA,QAeKR,WAAW,EACXD,WAAW;AAAA;AAAAuH,EAAA,GAhB1B9G,UAAU;AAgQhB,eAAeA,UAAU;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}