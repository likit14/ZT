{"ast":null,"code":"import React,{useState}from'react';import Sidebar from'../Components/sidebar';import Footer from'../Components/footer';import'../Styles/DiscoveredMachines.css';// Import your CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataTable=()=>{// Example data, replace with actual data fetching logic\nconst[selectedRows,setSelectedRows]=useState([]);const data=[{id:1,slNo:1,ipAddress:'192.168.1.1',hostname:'example.com',deploymentSection:'Deploy'},{id:2,slNo:2,ipAddress:'192.168.1.2',hostname:'example.net',deploymentSection:'Deploy'}// Add more data as needed\n];const handleCheckboxChange=(event,row)=>{const isChecked=event.target.checked;if(isChecked){setSelectedRows([...selectedRows,row]);}else{setSelectedRows(selectedRows.filter(selectedRow=>selectedRow.id!==row.id));}};const handleValidate=rowData=>{// Example: Simulate validation\nsetTimeout(()=>{const updatedData=data.map(item=>{if(item.id===rowData.id){return{...item,validationStatus:'PASS'};// Replace with actual validation result\n}return item;});console.log('Validation complete:',updatedData);// Update state or perform further actions based on validation\n},1000);// Simulate API delay\n};const handleDeploy=()=>{// Example: Simulate deployment\nconsole.log('Deploying:',selectedRows);// Implement actual deployment logic here, e.g., call an API\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"data-table-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Discovered Machines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"data-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Sl No.\"}),/*#__PURE__*/_jsx(\"th\",{children:\"IP Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hostname\"}),/*#__PURE__*/_jsxs(\"th\",{children:[\"Designating\",/*#__PURE__*/_jsx(\"br\",{}),\"Validation\"]}),/*#__PURE__*/_jsx(\"th\",{children:\"Result\"}),/*#__PURE__*/_jsxs(\"th\",{children:[\"Deployment\",/*#__PURE__*/_jsx(\"br\",{}),\"Section\"]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map((row,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:row.slNo}),/*#__PURE__*/_jsx(\"td\",{children:row.ipAddress}),/*#__PURE__*/_jsx(\"td\",{children:row.hostname}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleValidate(row),children:\"Validate\"})}),/*#__PURE__*/_jsx(\"td\",{style:{color:'green',fontFamily:'Arial, sans-serif'},children:/*#__PURE__*/_jsx(\"b\",{children:\"PASS\"})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:event=>handleCheckboxChange(event,row)}),row.deploymentSection]})]},index))})]})}),/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(\"button\",{className:\"button-deploy\",onClick:handleDeploy,disabled:selectedRows.length===0,children:\"Deploy\"})]})]});};export default DataTable;","map":{"version":3,"names":["React","useState","Sidebar","Footer","jsx","_jsx","jsxs","_jsxs","DataTable","selectedRows","setSelectedRows","data","id","slNo","ipAddress","hostname","deploymentSection","handleCheckboxChange","event","row","isChecked","target","checked","filter","selectedRow","handleValidate","rowData","setTimeout","updatedData","map","item","validationStatus","console","log","handleDeploy","className","children","index","onClick","style","color","fontFamily","type","onChange","disabled","length"],"sources":["/home/krishna/Documents/GitHub/Pinakastra-Cloud/src/View/DiscoveredMachines.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\n\nimport '../Styles/DiscoveredMachines.css'; // Import your CSS file for styling\n\nconst DataTable = () => {\n    // Example data, replace with actual data fetching logic\n    const [selectedRows, setSelectedRows] = useState([]);\n\n    const data = [\n        { id: 1, slNo: 1, ipAddress: '192.168.1.1', hostname: 'example.com', deploymentSection: 'Deploy' },\n        { id: 2, slNo: 2, ipAddress: '192.168.1.2', hostname: 'example.net', deploymentSection: 'Deploy' },\n        // Add more data as needed\n    ];\n\n    const handleCheckboxChange = (event, row) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, row]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.id !== row.id));\n        }\n    };\n\n    const handleValidate = (rowData) => {\n        // Example: Simulate validation\n        setTimeout(() => {\n            const updatedData = data.map(item => {\n                if (item.id === rowData.id) {\n                    return { ...item, validationStatus: 'PASS' }; // Replace with actual validation result\n                }\n                return item;\n            });\n            console.log('Validation complete:', updatedData);\n            // Update state or perform further actions based on validation\n        }, 1000); // Simulate API delay\n    };\n\n    const handleDeploy = () => {\n        // Example: Simulate deployment\n        console.log('Deploying:', selectedRows);\n        // Implement actual deployment logic here, e.g., call an API\n    };\n\n    return (\n        <div className=\"data-table-container\">\n            <h1>Discovered Machines</h1>\n            <div className=\"container\">\n                <div className=\"data-table-container\">\n                    {/* <h2>Data Table</h2> */}\n                    <table className=\"data-table\">\n                        <thead>\n                            <tr>\n                                <th>Sl No.</th>\n                                <th>IP Address</th>\n                                <th>Hostname</th>\n                                <th>Designating<br />Validation</th>\n                                <th>Result</th>\n                                <th>Deployment<br />Section</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((row, index) => (\n                                <tr key={index}>\n                                    <td>{row.slNo}</td>\n                                    <td>{row.ipAddress}</td>\n                                    <td>{row.hostname}</td>\n                                    <td>\n                                        <button onClick={() => handleValidate(row)}>Validate</button>\n                                    </td>\n                                    <td style={{ color: 'green', fontFamily: 'Arial, sans-serif' }}><b>PASS</b></td>\n                                    <td>\n                                        <input type=\"checkbox\" onChange={(event) => handleCheckboxChange(event, row)} />\n                                        {row.deploymentSection}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <Sidebar />\n                <Footer />\n\n                {/* Deploy button with external CSS class */}\n                <button\n                    className=\"button-deploy\"\n                    onClick={handleDeploy}\n                    disabled={selectedRows.length === 0}\n                >\n                    Deploy\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}