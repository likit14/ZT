{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/Components/StatusPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from \"../Styles/StatusPopup.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusPopup = ({\n  isVisible,\n  statusMessages,\n  onClose\n}) => {\n  _s();\n  const [progress, setProgress] = useState({});\n  const [intervalId, setIntervalId] = useState(null);\n  useEffect(() => {\n    if (isVisible) {\n      // Start polling for progress updates\n      const id = setInterval(() => {\n        fetchProgress();\n      }, 5000); // Poll every 5 seconds\n      setIntervalId(id);\n      return () => clearInterval(id); // Cleanup on unmount\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }, [isVisible]);\n  const fetchProgress = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/progress');\n      setProgress(response.data);\n    } catch (error) {\n      console.error('Error fetching progress:', error);\n    }\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [statusMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles[`${msg.type}-message`],\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.tick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)), progress && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.info - message,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.tick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), \" \", progress.message, \" \", progress.percentage && `(${progress.percentage}%)`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(StatusPopup, \"k1LsaNh1Xmo8c5EMkoLosoQaKrc=\");\n_c = StatusPopup;\nexport default StatusPopup;\nvar _c;\n$RefreshReg$(_c, \"StatusPopup\");","map":{"version":3,"names":["React","useState","useEffect","axios","styles","jsxDEV","_jsxDEV","StatusPopup","isVisible","statusMessages","onClose","_s","progress","setProgress","intervalId","setIntervalId","id","setInterval","fetchProgress","clearInterval","response","get","data","error","console","className","overlay","children","popup","closeButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","tick","text","info","message","percentage","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/Components/StatusPopup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from \"../Styles/StatusPopup.module.css\";\n\nconst StatusPopup = ({ isVisible, statusMessages, onClose }) => {\n    const [progress, setProgress] = useState({});\n    const [intervalId, setIntervalId] = useState(null);\n\n    useEffect(() => {\n        if (isVisible) {\n            // Start polling for progress updates\n            const id = setInterval(() => {\n                fetchProgress();\n            }, 5000); // Poll every 5 seconds\n            setIntervalId(id);\n\n            return () => clearInterval(id); // Cleanup on unmount\n        } else if (intervalId) {\n            clearInterval(intervalId);\n        }\n    }, [isVisible]);\n\n    const fetchProgress = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:8000/progress');\n            setProgress(response.data);\n        } catch (error) {\n            console.error('Error fetching progress:', error);\n        }\n    };\n\n    if (!isVisible) return null;\n\n    return (\n        <div className={styles.overlay}>\n            <div className={styles.popup}>\n                <button className={styles.closeButton} onClick={onClose}>âœ•</button>\n                <h2>Status</h2>\n                <ul>\n                    {statusMessages.map((msg, index) => (\n                        <li key={index} className={styles[`${msg.type}-message`]}>\n                            <span className={styles.tick}></span> {msg.text}\n                        </li>\n                    ))}\n                    {/* Display real-time progress */}\n                    {progress && (\n                        <li className={styles.info-message}>\n                            <span className={styles.tick}></span> {progress.message} {progress.percentage && `(${progress.percentage}%)`}\n                        </li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default StatusPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}