{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API requests\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Validation = () => {\n  _s();\n  const [animationClass, setAnimationClass] = useState('');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [bmcFormVisible, setBmcFormVisible] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [bmcDetails, setBmcDetails] = useState({\n    ip: '',\n    username: '',\n    password: ''\n  });\n  const [scanResults, setScanResults] = useState([]); // State to store scan results\n\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedNodes\n  } = location.state || {\n    selectedNodes: []\n  };\n  useEffect(() => {\n    // Fetch initial scan results when the component mounts\n    fetchScanResults();\n  }, []);\n  useEffect(() => {\n    if (animationClass) {\n      const timer = setTimeout(() => {\n        setAnimationClass('');\n      }, 500); // Duration should match the CSS animation duration\n      return () => clearTimeout(timer);\n    }\n  }, [animationClass]);\n  const fetchScanResults = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/scan');\n      setScanResults(response.data);\n    } catch (error) {\n      console.error('Error fetching scan results:', error);\n    }\n  };\n  const validateNode = node => {\n    setValidatingNode(node);\n    setCurrentNode(node);\n    setBmcDetails({\n      ...bmcDetails,\n      ip: node.ip\n    }); // Set the BMC IP to the current node's IP\n    setBmcFormVisible(true);\n  };\n  const handleBack = () => {\n    navigate(-1);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }, 100);\n  };\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n  const handleDeploy = () => {\n    navigate('/designatednode', {\n      state: {\n        selectedNodes: selectedRows\n      }\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleBmcFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n      alert(response.data.message); // Show a success message or handle as needed\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [currentNode.ip]: {\n          status: 'success',\n          message: 'Validation successful'\n        }\n      }));\n      setAnimationClass(styles['fade-in']); // Trigger animation\n    } catch (error) {\n      console.error('Error setting PXE boot:', error);\n      alert('Failed to set PXE boot. Please try again.');\n    }\n    setBmcFormVisible(false); // Hide the form after submission\n  };\n  const handleCancel = () => {\n    setBmcFormVisible(false); // Hide the form when canceled\n    setValidatingNode(null); // Reset validating node state\n  };\n  const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"data-table-container\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: styles[\"data-table\"],\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Sl No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"IP Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validation Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: styles[\"no-device-message\"],\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"No devices selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 101\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this) : paginatedNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (currentPage - 1) * itemsPerPage + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.ip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                      onClick: () => validateNode(node),\n                      children: validatingNode !== null && validatingNode.ip === node.ip ? 'Validating' : 'Validate'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: 'red',\n                      fontFamily: 'Arial, sans-serif'\n                    },\n                    className: animationClass,\n                    children: validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: validationResults[node.ip] && validationResults[node.ip].status === 'failure' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => alert(validationResults[node.ip].message),\n                      children: \"Info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles[\"checkbox-column\"],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: styles[\"checkbox-label\"],\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedRows.some(row => row.ip === node.ip),\n                        onChange: event => handleCheckboxChange(event, node)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: styles[\"checkbox-custom\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 49\n                  }, this)]\n                }, node.ip, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pagination,\n              children: Array.from({\n                length: Math.ceil(selectedNodes.length / itemsPerPage)\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(i + 1),\n                className: styles[currentPage === i + 1 ? 'active' : ''],\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleDeploy,\n              disabled: selectedRows.length === 0,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Enter BMC Details for \", currentNode === null || currentNode === void 0 ? void 0 : currentNode.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBmcFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.ip,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              ip: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: bmcDetails.username,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"BMC Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: bmcDetails.password,\n            onChange: e => setBmcDetails({\n              ...bmcDetails,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles[\"cancel-button\"],\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(Validation, \"oRBIMaLGzpNLFRMbivA6O1emVd4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","Sidebar","FontAwesomeIcon","faArrowLeft","styles","jsxDEV","_jsxDEV","Validation","_s","animationClass","setAnimationClass","selectedRows","setSelectedRows","validationResults","setValidationResults","validatingNode","setValidatingNode","currentPage","setCurrentPage","bmcFormVisible","setBmcFormVisible","currentNode","setCurrentNode","bmcDetails","setBmcDetails","ip","username","password","scanResults","setScanResults","itemsPerPage","navigate","location","selectedNodes","state","fetchScanResults","timer","setTimeout","clearTimeout","response","get","data","error","console","validateNode","node","handleBack","window","scrollTo","top","behavior","handleCheckboxChange","event","isChecked","target","checked","filter","selectedRow","handleDeploy","handlePageChange","newPage","handleBmcFormSubmit","preventDefault","post","alert","message","prevResults","status","handleCancel","paginatedNodes","slice","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","main","container","length","colSpan","map","index","disabled","style","color","fontFamily","type","some","row","onChange","pagination","Array","from","Math","ceil","_","i","visible","onSubmit","value","e","required","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Validation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API requests\nimport Sidebar from '../Components/sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"../Styles/Validation.module.css\";\n\nconst Validation = () => {\n    const [animationClass, setAnimationClass] = useState('');\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [validationResults, setValidationResults] = useState({});\n    const [validatingNode, setValidatingNode] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [bmcFormVisible, setBmcFormVisible] = useState(false);\n    const [currentNode, setCurrentNode] = useState(null);\n    const [bmcDetails, setBmcDetails] = useState({ ip: '', username: '', password: '' });\n    const [scanResults, setScanResults] = useState([]); // State to store scan results\n\n    const itemsPerPage = 4;\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { selectedNodes } = location.state || { selectedNodes: [] };\n\n    useEffect(() => {\n        // Fetch initial scan results when the component mounts\n        fetchScanResults();\n    }, []);\n\n    useEffect(() => {\n        if (animationClass) {\n            const timer = setTimeout(() => {\n                setAnimationClass('');\n            }, 500); // Duration should match the CSS animation duration\n            return () => clearTimeout(timer);\n        }\n    }, [animationClass]);\n\n    const fetchScanResults = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:8000/scan');\n            setScanResults(response.data);\n        } catch (error) {\n            console.error('Error fetching scan results:', error);\n        }\n    };\n\n    const validateNode = (node) => {\n        setValidatingNode(node);\n        setCurrentNode(node);\n        setBmcDetails({ ...bmcDetails, ip: node.ip }); // Set the BMC IP to the current node's IP\n        setBmcFormVisible(true);\n    };\n\n    const handleBack = () => {\n        navigate(-1);\n        setTimeout(() => {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }, 100);\n    };\n\n    const handleCheckboxChange = (event, node) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, node]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n        }\n    };\n\n    const handleDeploy = () => {\n        navigate('/designatednode', { state: { selectedNodes: selectedRows } });\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handleBmcFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/set_pxe_boot', bmcDetails);\n            alert(response.data.message); // Show a success message or handle as needed\n            setValidationResults((prevResults) => ({\n                ...prevResults,\n                [currentNode.ip]: { status: 'success', message: 'Validation successful' }\n            }));\n            setAnimationClass(styles['fade-in']); // Trigger animation\n        } catch (error) {\n            console.error('Error setting PXE boot:', error);\n            alert('Failed to set PXE boot. Please try again.');\n        }\n        setBmcFormVisible(false); // Hide the form after submission\n    };\n\n    const handleCancel = () => {\n        setBmcFormVisible(false); // Hide the form when canceled\n        setValidatingNode(null); // Reset validating node state\n    };\n\n    const paginatedNodes = selectedNodes.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <button className={styles[\"back-button\"]} onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                </button>\n                <center>\n                    <h1>Validation</h1>\n                </center>\n            </div>\n            <div className={styles.main}>\n                <div className={styles[\"data-table-container\"]}>\n                    <div className={styles.container}>\n                        <div>\n                            <table className={styles[\"data-table\"]}>\n                                <thead>\n                                    <tr>\n                                        <th>Sl No.</th>\n                                        <th>IP Address</th>\n                                        <th>Validate</th>\n                                        <th>Validation Result</th>\n                                        <th>Info</th>\n                                        <th>Select</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedNodes.length === 0 ? (\n                                        <tr>\n                                            <td colSpan=\"6\" className={styles[\"no-device-message\"]}><center>No devices selected</center></td>\n                                        </tr>\n                                    ) : (\n                                        paginatedNodes.map((node, index) => (\n                                            <tr key={node.ip}>\n                                                <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                                                <td>{node.ip}</td>\n                                                <td>\n                                                    <button \n                                                        disabled={validatingNode !== null && validatingNode.ip === node.ip}\n                                                        onClick={() => validateNode(node)}\n                                                    >\n                                                        {validatingNode !== null && validatingNode.ip === node.ip ? 'Validating' : 'Validate'}\n                                                    </button>\n                                                </td>\n                                                <td style={{ color: 'red', fontFamily: 'Arial, sans-serif' }} className={animationClass}>\n                                                    {validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'}\n                                                </td>\n                                                <td>\n                                                    {validationResults[node.ip] && validationResults[node.ip].status === 'failure' && (\n                                                        <button onClick={() => alert(validationResults[node.ip].message)}>Info</button>\n                                                    )}\n                                                </td>\n                                                <td className={styles[\"checkbox-column\"]}>\n                                                    <label className={styles[\"checkbox-label\"]}>\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={selectedRows.some(row => row.ip === node.ip)}\n                                                            onChange={(event) => handleCheckboxChange(event, node)}\n                                                        />\n                                                        <span className={styles[\"checkbox-custom\"]}></span>\n                                                    </label>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    )}\n                                </tbody>\n                            </table>\n\n                            <div className={styles.pagination}>\n                                {Array.from({ length: Math.ceil(selectedNodes.length / itemsPerPage) }, (_, i) => (\n                                    <button\n                                        key={i}\n                                        onClick={() => handlePageChange(i + 1)}\n                                        className={styles[currentPage === i + 1 ? 'active' : '']}\n                                    >\n                                        {i + 1}\n                                    </button>    \n                                ))}\n                            </div>\n                            <button\n                                className=\"next-button\"\n                                onClick={handleDeploy}\n                                disabled={selectedRows.length === 0}\n                            >\n                                <strong>Next</strong>\n                            </button>\n                        </div>\n                        <Sidebar />\n                    </div>\n                </div>\n            </div>\n\n            {/* BMC Form */}\n            <div className={`${styles[\"bmc-form\"]} ${bmcFormVisible ? styles.visible : ''}`}>\n                <h2><strong>Enter BMC Details for {currentNode?.ip}</strong></h2>\n                <form onSubmit={handleBmcFormSubmit}>\n                    <label>\n                        BMC IP Address:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.ip}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, ip: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Username:\n                        <input\n                            type=\"text\"\n                            value={bmcDetails.username}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, username: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <label>\n                        BMC Password:\n                        <input\n                            type=\"password\"\n                            value={bmcDetails.password}\n                            onChange={(e) =>\n                                setBmcDetails({ ...bmcDetails, password: e.target.value })\n                            }\n                            required\n                        />\n                    </label>\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                        <button type=\"button\" className={styles[\"cancel-button\"]} onClick={handleCancel}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Validation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}