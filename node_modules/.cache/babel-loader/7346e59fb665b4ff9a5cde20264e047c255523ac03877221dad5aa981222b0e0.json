{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KRISHNA RAJ K S\\\\Documents\\\\GitHub\\\\Pinakastra-Cloud\\\\src\\\\View\\\\DeploymentInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\nimport '../Styles/DeploymentInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeploymentInfo = () => {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    fetch('http://localhost:5000/get_data') // Adjust URL based on your backend setup\n    .then(response => response.json()).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  const handleCheckboxChange = row => {\n    if (selectedRow && selectedRow.id === row.id) {\n      setSelectedRow(null);\n    } else {\n      setSelectedRow(row);\n    }\n  };\n  const handleDeploy = () => {\n    if (!selectedRow) return;\n    fetch('http://localhost:5000/deploy', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(selectedRow)\n    }).then(response => response.json()).then(data => {\n      console.log('Deployment response:', data);\n      // Handle response if needed\n      navigate('/designatednodes');\n    }).catch(error => {\n      console.error('Error during deployment:', error);\n      // Handle error if needed\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deployment Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sl No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"IP Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hostname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.slNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.ipAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.hostname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.roles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-deploy\",\n        onClick: handleDeploy,\n        disabled: !selectedRow,\n        children: \"Start Deploy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(DeploymentInfo, \"qgEVP6cQ00SDzGlPuxSjCiWGkWs=\", false, function () {\n  return [useNavigate];\n});\n_c = DeploymentInfo;\nexport default DeploymentInfo;\nvar _c;\n$RefreshReg$(_c, \"DeploymentInfo\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Sidebar","Footer","jsxDEV","_jsxDEV","DeploymentInfo","_s","navigate","data","setData","selectedRow","setSelectedRow","fetchData","fetch","then","response","json","catch","error","console","handleCheckboxChange","row","id","handleDeploy","method","headers","body","JSON","stringify","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","slNo","ipAddress","hostname","roles","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/KRISHNA RAJ K S/Documents/GitHub/Pinakastra-Cloud/src/View/DeploymentInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Sidebar from '../Components/sidebar';\r\nimport Footer from '../Components/footer';\r\nimport '../Styles/DeploymentInfo.css';\r\n\r\nconst DeploymentInfo = () => {\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        fetch('http://localhost:5000/get_data')  // Adjust URL based on your backend setup\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setData(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    };\r\n\r\n    const handleCheckboxChange = (row) => {\r\n        if (selectedRow && selectedRow.id === row.id) {\r\n            setSelectedRow(null);\r\n        } else {\r\n            setSelectedRow(row);\r\n        }\r\n    };\r\n\r\n    const handleDeploy = () => {\r\n        if (!selectedRow) return;\r\n\r\n        fetch('http://localhost:5000/deploy', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(selectedRow),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Deployment response:', data);\r\n            // Handle response if needed\r\n            navigate('/designatednodes');\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during deployment:', error);\r\n            // Handle error if needed\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"data-table-container\">\r\n            <h1>Deployment Info</h1>\r\n            <div className=\"container\">\r\n                <div className=\"data-table-container\">\r\n                    <table className=\"data-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sl No.</th>\r\n                                <th>IP Address</th>\r\n                                <th>Hostname</th>\r\n                                <th>Roles</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map((row, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{row.slNo}</td>\r\n                                    <td>{row.ipAddress}</td>\r\n                                    <td>{row.hostname}</td>\r\n                                    <td>{row.roles}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <Sidebar />\r\n                <Footer />\r\n                <button\r\n                    className=\"button-deploy\"\r\n                    onClick={handleDeploy}\r\n                    disabled={!selectedRow}\r\n                >\r\n                    Start Deploy\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeploymentInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}