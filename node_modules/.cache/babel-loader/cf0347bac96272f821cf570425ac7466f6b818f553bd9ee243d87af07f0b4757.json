{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport DeploymentOptions from './View/DeploymentOptions';\nimport Login from './View/Login';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(false);\n  useEffect(() => {\n    const loginData = JSON.parse(localStorage.getItem('loginDetails'));\n    setIsLogin(loginData.loginStatus);\n  }, []);\n  function checkLogin(status) {\n    setIsLogin(status);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(DeploymentOptions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      checkLogin: {\n        checkLogin\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 42\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"KSNiRaid26I3Z4l9Z7nh631iqf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","DeploymentOptions","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLogin","setIsLogin","loginData","JSON","parse","localStorage","getItem","loginStatus","checkLogin","status","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport DeploymentOptions from './View/DeploymentOptions'\nimport Login from './View/Login'\n\nconst App=()=>{\n    const [isLogin,setIsLogin]=useState(false)\n\n    useEffect(()=>{\n        const loginData=JSON.parse(localStorage.getItem('loginDetails'))\n        setIsLogin(loginData.loginStatus)\n    },[])\n\n    function checkLogin(status){\n        setIsLogin(status)\n    }\n\n    return(\n        <>{\n            isLogin?<DeploymentOptions/>:<Login checkLogin={{checkLogin}}/>\n        }\n        </>\n    )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,iBAAiB,MAAM,0BAA0B;AACxD,OAAOC,KAAK,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,GAAG,GAACA,CAAA,KAAI;EAAAC,EAAA;EACV,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACV,QAAQ,CAAC,KAAK,CAAC;EAE1CD,SAAS,CAAC,MAAI;IACV,MAAMY,SAAS,GAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IAChEL,UAAU,CAACC,SAAS,CAACK,WAAW,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAEL,SAASC,UAAUA,CAACC,MAAM,EAAC;IACvBR,UAAU,CAACQ,MAAM,CAAC;EACtB;EAEA,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACIV,OAAO,gBAACL,OAAA,CAACH,iBAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAACnB,OAAA,CAACF,KAAK;MAACe,UAAU,EAAE;QAACA;MAAU;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAEjE,CAAC;AAEX,CAAC;AAAAf,EAAA,CAlBKD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAoBT,eAAeA,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}