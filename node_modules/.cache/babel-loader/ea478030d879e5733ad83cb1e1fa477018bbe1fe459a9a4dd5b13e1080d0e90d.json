{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/DiscoveredMachines.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\nimport axios from 'axios';\nimport '../Styles/DiscoveredMachines.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  // Example data, replace with actual data fetching logic\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [nodes, setNodes] = useState([]);\n  const [validationResults, setValidationResults] = useState({});\n  // const [selectedRows, setSelectedRows] = useState([]);\n  const [imagePath, setImagePath] = useState('');\n\n  // const data = [\n  //     { id: 1, slNo: 1, ipAddress: '192.168.1.1', hostname: 'example.com', deploymentSection: 'Deploy' },\n  //     { id: 2, slNo: 2, ipAddress: '192.168.1.2', hostname: 'example.net', deploymentSection: 'Deploy' },\n  //     // Add more data as needed\n  // ];\n  const data = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/scan');\n      setNodes(response.data);\n      setValidationResults({});\n    } catch (error) {\n      console.error('Error scanning network:', error);\n    }\n  };\n  const handleCheckboxChange = (event, row) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, row]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.id !== row.id));\n    }\n  };\n  const handleValidate = rowData => {\n    // Example: Simulate validation\n    setTimeout(() => {\n      const updatedData = data.map(item => {\n        if (item.id === rowData.id) {\n          return {\n            ...item,\n            validationStatus: 'PASS'\n          }; // Replace with actual validation result\n        }\n        return item;\n      });\n      console.log('Validation complete:', updatedData);\n      // Update state or perform further actions based on validation\n    }, 1000); // Simulate API delay\n  };\n  const handleDeploy = () => {\n    // Example: Simulate deployment\n    console.log('Deploying:', selectedRows);\n    // Implement actual deployment logic here, e.g., call an API\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Discovered Machines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sl No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"IP Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hostname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Designating\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 48\n                }, this), \"Validation\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Deployment\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 47\n                }, this), \"Section\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.slNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.ipAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.hostname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleValidate(row),\n                  children: \"Validate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  color: 'green',\n                  fontFamily: 'Arial, sans-serif'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"PASS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: event => handleCheckboxChange(event, row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), row.deploymentSection]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-deploy\",\n        onClick: handleDeploy,\n        disabled: selectedRows.length === 0,\n        children: \"Deploy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTable, \"yolwxXJZlQeBcKbLOxLNzPrrXtM=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","Sidebar","Footer","axios","jsxDEV","_jsxDEV","DataTable","_s","selectedRows","setSelectedRows","nodes","setNodes","validationResults","setValidationResults","imagePath","setImagePath","data","response","get","error","console","handleCheckboxChange","event","row","isChecked","target","checked","filter","selectedRow","id","handleValidate","rowData","setTimeout","updatedData","map","item","validationStatus","log","handleDeploy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","slNo","ipAddress","hostname","onClick","style","color","fontFamily","type","onChange","deploymentSection","disabled","length","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/DiscoveredMachines.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\nimport axios from 'axios';\n\nimport '../Styles/DiscoveredMachines.css'; // Import your CSS file for styling\n\nconst DataTable = () => {\n    // Example data, replace with actual data fetching logic\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [nodes, setNodes] = useState([]);\n    const [validationResults, setValidationResults] = useState({});\n    // const [selectedRows, setSelectedRows] = useState([]);\n    const [imagePath, setImagePath] = useState('');\n\n    // const data = [\n    //     { id: 1, slNo: 1, ipAddress: '192.168.1.1', hostname: 'example.com', deploymentSection: 'Deploy' },\n    //     { id: 2, slNo: 2, ipAddress: '192.168.1.2', hostname: 'example.net', deploymentSection: 'Deploy' },\n    //     // Add more data as needed\n    // ];\n    const data = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:5000/scan');\n            setNodes(response.data);\n            setValidationResults({});\n        } catch (error) {\n            console.error('Error scanning network:', error);\n        }\n    };\n\n    const handleCheckboxChange = (event, row) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, row]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.id !== row.id));\n        }\n    };\n\n    const handleValidate = (rowData) => {\n        // Example: Simulate validation\n        setTimeout(() => {\n            const updatedData = data.map(item => {\n                if (item.id === rowData.id) {\n                    return { ...item, validationStatus: 'PASS' }; // Replace with actual validation result\n                }\n                return item;\n            });\n            console.log('Validation complete:', updatedData);\n            // Update state or perform further actions based on validation\n        }, 1000); // Simulate API delay\n    };\n\n    const handleDeploy = () => {\n        // Example: Simulate deployment\n        console.log('Deploying:', selectedRows);\n        // Implement actual deployment logic here, e.g., call an API\n    };\n\n    return (\n        <div className=\"data-table-container\">\n            <h1>Discovered Machines</h1>\n            <div className=\"container\">\n                <div className=\"data-table-container\">\n                    {/* <h2>Data Table</h2> */}\n                    <table className=\"data-table\">\n                        <thead>\n                            <tr>\n                                <th>Sl No.</th>\n                                <th>IP Address</th>\n                                <th>Hostname</th>\n                                <th>Designating<br />Validation</th>\n                                <th>Result</th>\n                                <th>Deployment<br />Section</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((row, index) => (\n                                <tr key={index}>\n                                    <td>{row.slNo}</td>\n                                    <td>{row.ipAddress}</td>\n                                    <td>{row.hostname}</td>\n                                    <td>\n                                        <button onClick={() => handleValidate(row)}>Validate</button>\n                                    </td>\n                                    <td style={{ color: 'green', fontFamily: 'Arial, sans-serif' }}><b>PASS</b></td>\n                                    <td>\n                                        <input type=\"checkbox\" onChange={(event) => handleCheckboxChange(event, row)} />\n                                        {row.deploymentSection}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <Sidebar />\n                <Footer />\n\n                {/* Deploy button with external CSS class */}\n                <button\n                    className=\"button-deploy\"\n                    onClick={handleDeploy}\n                    disabled={selectedRows.length === 0}\n                >\n                    Deploy\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}