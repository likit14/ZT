{"ast":null,"code":"import React,{useState}from'react';import Sidebar from'../Components/sidebar';import Footer from'../Components/footer';import'../Styles/DesignatedNodes.css';// Import your CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataTable=()=>{const[selectedRows,setSelectedRows]=useState([]);const[roles,setRoles]=useState([{id:1,slNo:1,ipAddress:'192.168.1.1',hostname:'example.com',roles:[]},{id:2,slNo:2,ipAddress:'192.168.1.2',hostname:'example.net',roles:[]}// Add more data as needed\n]);const[interface01,setInterface01]=useState('');const[interface02,setInterface02]=useState('');const[floatingIp,setFloatingIp]=useState('');const handleCheckboxChange=(event,row)=>{const isChecked=event.target.checked;if(isChecked){setSelectedRows([...selectedRows,row]);}else{setSelectedRows(selectedRows.filter(selectedRow=>selectedRow.id!==row.id));}};const handleRoleChange=(event,row,role)=>{const updatedRoles=roles.map(item=>{if(item.id===row.id){const rolesSet=new Set(item.roles);if(event.target.checked){rolesSet.add(role);}else{rolesSet.delete(role);}return{...item,roles:Array.from(rolesSet)};}return item;});setRoles(updatedRoles);console.log('Roles updated:',updatedRoles);};const handleDeploy=()=>{console.log('Deploying:',selectedRows);// Implement actual deployment logic here, e.g., call an API\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"data-table-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Designated Nodes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"data-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Sl No.\"}),/*#__PURE__*/_jsx(\"th\",{children:\"IP Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hostname\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Roles\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:roles.map((row,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:row.slNo}),/*#__PURE__*/_jsx(\"td\",{children:row.ipAddress}),/*#__PURE__*/_jsx(\"td\",{children:row.hostname}),/*#__PURE__*/_jsxs(\"td\",{className:\"checkbox-column\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:row.roles.includes('Control'),onChange:event=>handleRoleChange(event,row,'Control')}),/*#__PURE__*/_jsx(\"span\",{children:\"Control\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:row.roles.includes('Compute'),onChange:event=>handleRoleChange(event,row,'Compute')}),/*#__PURE__*/_jsx(\"span\",{children:\"Compute\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:row.roles.includes('Storage'),onChange:event=>handleRoleChange(event,row,'Storage')}),/*#__PURE__*/_jsx(\"span\",{children:\"Storage\"})]})]})]},index))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-fields-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"interface01\",children:\"INTERFACE_01:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"interface01\",value:interface01,onChange:e=>setInterface01(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"interface02\",children:\"INTERFACE_02:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"interface02\",value:interface02,onChange:e=>setInterface02(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floatingIp\",children:\"FLOATING_IP:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"floatingIp\",value:floatingIp,onChange:e=>setFloatingIp(e.target.value)})]})]}),/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(\"button\",{className:\"button-deploy\",onClick:handleDeploy,disabled:selectedRows.length===0,children:\"Next\"})]})]});};export default DataTable;","map":{"version":3,"names":["React","useState","Sidebar","Footer","jsx","_jsx","jsxs","_jsxs","DataTable","selectedRows","setSelectedRows","roles","setRoles","id","slNo","ipAddress","hostname","interface01","setInterface01","interface02","setInterface02","floatingIp","setFloatingIp","handleCheckboxChange","event","row","isChecked","target","checked","filter","selectedRow","handleRoleChange","role","updatedRoles","map","item","rolesSet","Set","add","delete","Array","from","console","log","handleDeploy","className","children","index","type","includes","onChange","htmlFor","value","e","onClick","disabled","length"],"sources":["/home/krishna/Documents/GitHub/Pinakastra-Cloud/src/View/DesignatedNodes.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from '../Components/sidebar';\nimport Footer from '../Components/footer';\n\nimport '../Styles/DesignatedNodes.css'; // Import your CSS file for styling\n\nconst DataTable = () => {\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [roles, setRoles] = useState([\n        { id: 1, slNo: 1, ipAddress: '192.168.1.1', hostname: 'example.com', roles: [] },\n        { id: 2, slNo: 2, ipAddress: '192.168.1.2', hostname: 'example.net', roles: [] },\n        // Add more data as needed\n    ]);\n\n    const [interface01, setInterface01] = useState('');\n    const [interface02, setInterface02] = useState('');\n    const [floatingIp, setFloatingIp] = useState('');\n\n    const handleCheckboxChange = (event, row) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, row]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.id !== row.id));\n        }\n    };\n\n    const handleRoleChange = (event, row, role) => {\n        const updatedRoles = roles.map(item => {\n            if (item.id === row.id) {\n                const rolesSet = new Set(item.roles);\n                if (event.target.checked) {\n                    rolesSet.add(role);\n                } else {\n                    rolesSet.delete(role);\n                }\n                return { ...item, roles: Array.from(rolesSet) };\n            }\n            return item;\n        });\n        setRoles(updatedRoles);\n        console.log('Roles updated:', updatedRoles);\n    };\n\n    const handleDeploy = () => {\n        console.log('Deploying:', selectedRows);\n        // Implement actual deployment logic here, e.g., call an API\n    };\n\n    return (\n        <div className=\"data-table-container\">\n            <h1>Designated Nodes</h1>\n            <div className=\"container\">\n                <div className=\"data-table-container\">\n                    <table className=\"data-table\">\n                        <thead>\n                            <tr>\n                                <th>Sl No.</th>\n                                <th>IP Address</th>\n                                <th>Hostname</th>\n                                <th>Roles</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {roles.map((row, index) => (\n                                <tr key={index}>\n                                    <td>{row.slNo}</td>\n                                    <td>{row.ipAddress}</td>\n                                    <td>{row.hostname}</td>\n                                    <td className=\"checkbox-column\">\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={row.roles.includes('Control')}\n                                                onChange={(event) => handleRoleChange(event, row, 'Control')}\n                                            />\n                                            <span>Control</span>\n                                        </label>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={row.roles.includes('Compute')}\n                                                onChange={(event) => handleRoleChange(event, row, 'Compute')}\n                                            />\n                                            <span>Compute</span>\n                                        </label>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={row.roles.includes('Storage')}\n                                                onChange={(event) => handleRoleChange(event, row, 'Storage')}\n                                            />\n                                            <span>Storage</span>\n                                        </label>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                \n                {/* Text fields centered below the table */}\n                <div className=\"text-fields-container\">\n                    <div className=\"text-field\">\n                        <label htmlFor=\"interface01\">INTERFACE_01:</label>\n                        <input\n                            type=\"text\"\n                            id=\"interface01\"\n                            value={interface01}\n                            onChange={(e) => setInterface01(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"text-field\">\n                        <label htmlFor=\"interface02\">INTERFACE_02:</label>\n                        <input\n                            type=\"text\"\n                            id=\"interface02\"\n                            value={interface02}\n                            onChange={(e) => setInterface02(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"text-field\">\n                        <label htmlFor=\"floatingIp\">FLOATING_IP:</label>\n                        <input\n                            type=\"text\"\n                            id=\"floatingIp\"\n                            value={floatingIp}\n                            onChange={(e) => setFloatingIp(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <Sidebar />\n                <Footer />\n\n                {/* Deployment button */}\n                <button\n                    className=\"button-deploy\"\n                    onClick={handleDeploy}\n                    disabled={selectedRows.length === 0}\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}