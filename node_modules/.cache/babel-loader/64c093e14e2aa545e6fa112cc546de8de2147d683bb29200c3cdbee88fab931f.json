{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Scaleup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'; // Import axios for API calls\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowsRotate } from \"@fortawesome/free-solid-svg-icons\";\nimport Sidebar from \"../Components/sidebar\";\nimport styles from \"../Styles/Scaleup.module.css\"; // Import CSS Modules\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [nodes, setNodes] = useState([]); // Initialize as an empty array\n  const [validationResults, setValidationResults] = useState({});\n  const [validatingNode, setValidatingNode] = useState(null);\n  const [isScanning, setIsScanning] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 4;\n  const navigate = useNavigate();\n  const [isRotating, setIsRotating] = useState(false);\n\n  // useEffect(() => {\n  //     scanNetwork();\n  // }, []);\n\n  // const scanNetwork = async () => {\n  //     setIsScanning(true);\n  //     try {\n  //         const response = await axios.get('http://127.0.0.1:8000/');\n  //         console.log('API Response:', response.data); // Log the API response\n  //         if (response.data.status === 'success' && Array.isArray(response.data.message)) {\n  //             setNodes(response.data.message);\n  //         } else {\n  //             console.error('Unexpected response format:', response.data);\n  //             setNodes([]); // Ensure nodes is always an array\n  //         }\n  //         setValidationResults({});\n  //     } catch (error) {\n  //         console.error('Error scanning network:', error);\n  //         setNodes([]); // Ensure nodes is always an array in case of error\n  //     } finally {\n  //         setIsScanning(false);\n  //     }\n  // };\n\n  const handleCheckboxChange = (event, node) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows([...selectedRows, node]);\n    } else {\n      setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n    }\n  };\n  const validateNode = async node => {\n    setValidatingNode(node);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/validate', {\n        ip: node.ip\n      });\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: response.data\n      }));\n    } catch (error) {\n      console.error('Error validating node:', error);\n      setValidationResults(prevResults => ({\n        ...prevResults,\n        [node.ip]: {\n          status: 'failure',\n          message: 'Validation failed due to an error.'\n        }\n      }));\n    } finally {\n      setValidatingNode(null);\n    }\n  };\n  const handleRefresh = () => {\n    // scanNetwork();\n    setIsRotating(true);\n    setTimeout(() => {\n      setIsRotating(false);\n    }, 1000);\n  };\n  const handleDeploy = () => {\n    navigate('/DesignatedNode', {\n      state: {\n        selectedNodes: selectedRows\n      }\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleBack = () => {\n    navigate(-1); // Navigate to the previous page in history\n    setTimeout(() => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }, 100); // Delay to ensure navigation completes before scrolling\n  };\n  const paginatedNodes = (Array.isArray(nodes) ? nodes : []).slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Scale Up\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `button ${isRotating ? 'rotating' : ''}`,\n            onClick: handleRefresh,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowsRotate,\n              size: \"2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"data-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [\"Sl\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 47\n                    }, this), \"No.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"IP Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Hostname\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"OSType\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [\"Validation\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 55\n                    }, this), \"Result\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [isScanning && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"8\",\n                    className: \"scanning-message\",\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"Scanning...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 90\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this), !isScanning && nodes.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"8\",\n                    className: \"no-device-message\",\n                    children: /*#__PURE__*/_jsxDEV(\"center\", {\n                      children: \"No device found\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 91\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this), !isScanning && paginatedNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (currentPage - 1) * itemsPerPage + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.ip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.hostname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: node.os_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      disabled: validatingNode !== null && validatingNode.ip === node.ip,\n                      onClick: () => validateNode(node),\n                      children: validatingNode !== null && validatingNode.ip === node.ip ? 'Validating...' : 'Validate'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      color: 'red',\n                      fontFamily: 'Arial, sans-serif'\n                    },\n                    children: validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: validationResults[node.ip] && validationResults[node.ip].status === 'failure' && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => alert(validationResults[node.ip].message),\n                      children: \"Info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"checkbox-column\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"checkbox-label\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedRows.some(selectedRow => selectedRow.ip === node.ip),\n                        onChange: event => handleCheckboxChange(event, node)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"checkbox-custom\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this)]\n                }, node.ip, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination\",\n              children: Array.from({\n                length: Math.ceil(nodes.length / itemsPerPage)\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(i + 1),\n                className: currentPage === i + 1 ? 'active' : '',\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleDeploy,\n              disabled: selectedRows.length === 0,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Scale up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTable, \"ckJYZb4UwE59+zyW1lHBQ26jQDc=\", false, function () {\n  return [useNavigate];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","FontAwesomeIcon","faArrowLeft","faArrowsRotate","Sidebar","styles","jsxDEV","_jsxDEV","DataTable","_s","selectedRows","setSelectedRows","nodes","setNodes","validationResults","setValidationResults","validatingNode","setValidatingNode","isScanning","setIsScanning","currentPage","setCurrentPage","itemsPerPage","navigate","isRotating","setIsRotating","handleCheckboxChange","event","node","isChecked","target","checked","filter","selectedRow","ip","validateNode","response","post","prevResults","data","error","console","status","message","handleRefresh","setTimeout","handleDeploy","state","selectedNodes","window","scrollTo","top","behavior","handlePageChange","newPage","handleBack","paginatedNodes","Array","isArray","slice","children","className","header","onClick","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","length","map","index","hostname","os_type","disabled","style","color","fontFamily","alert","type","some","onChange","from","Math","ceil","_","i","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/Scaleup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'; // Import axios for API calls\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowsRotate } from \"@fortawesome/free-solid-svg-icons\";\nimport Sidebar from \"../Components/sidebar\";\nimport styles from \"../Styles/Scaleup.module.css\"; // Import CSS Modules\n\nconst DataTable = () => {\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [nodes, setNodes] = useState([]); // Initialize as an empty array\n    const [validationResults, setValidationResults] = useState({});\n    const [validatingNode, setValidatingNode] = useState(null);\n    const [isScanning, setIsScanning] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 4;\n    const navigate = useNavigate();\n    const [isRotating, setIsRotating] = useState(false);\n\n    // useEffect(() => {\n    //     scanNetwork();\n    // }, []);\n\n    // const scanNetwork = async () => {\n    //     setIsScanning(true);\n    //     try {\n    //         const response = await axios.get('http://127.0.0.1:8000/');\n    //         console.log('API Response:', response.data); // Log the API response\n    //         if (response.data.status === 'success' && Array.isArray(response.data.message)) {\n    //             setNodes(response.data.message);\n    //         } else {\n    //             console.error('Unexpected response format:', response.data);\n    //             setNodes([]); // Ensure nodes is always an array\n    //         }\n    //         setValidationResults({});\n    //     } catch (error) {\n    //         console.error('Error scanning network:', error);\n    //         setNodes([]); // Ensure nodes is always an array in case of error\n    //     } finally {\n    //         setIsScanning(false);\n    //     }\n    // };\n    \n    const handleCheckboxChange = (event, node) => {\n        const isChecked = event.target.checked;\n        if (isChecked) {\n            setSelectedRows([...selectedRows, node]);\n        } else {\n            setSelectedRows(selectedRows.filter(selectedRow => selectedRow.ip !== node.ip));\n        }\n    };\n\n    const validateNode = async (node) => {\n        setValidatingNode(node);\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/validate', { ip: node.ip });\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: response.data\n            }));\n        } catch (error) {\n            console.error('Error validating node:', error);\n            setValidationResults(prevResults => ({\n                ...prevResults,\n                [node.ip]: { status: 'failure', message: 'Validation failed due to an error.' }\n            }));\n        } finally {\n            setValidatingNode(null);\n        }\n    };\n\n    const handleRefresh = () => {\n        // scanNetwork();\n        setIsRotating(true);\n        setTimeout(() => {\n            setIsRotating(false);\n        }, 1000);\n    };\n\n    const handleDeploy = () => {\n        navigate('/DesignatedNode', { state: { selectedNodes: selectedRows } });\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handleBack = () => {\n        navigate(-1); // Navigate to the previous page in history\n        setTimeout(() => {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }, 100); // Delay to ensure navigation completes before scrolling\n    };\n    \n    const paginatedNodes = (Array.isArray(nodes) ? nodes : []).slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <button className=\"back-button\" onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n                </button>\n                <center>\n                    <h1>Scale Up\n                        <button className={`button ${isRotating ? 'rotating' : ''}`} onClick={handleRefresh}>\n                            <FontAwesomeIcon icon={faArrowsRotate} size=\"2x\" />\n                        </button>\n                    </h1>\n                </center>\n            </div>\n            <div className='main'>\n                <div className=\"data-table-container\">\n                    <div className=\"container\">\n                        <div>\n                            <table className=\"data-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Sl<br />No.</th>\n                                        <th>IP Address</th>\n                                        <th>Hostname</th>\n                                        <th>OSType</th>\n                                        <th>Validate</th>\n                                        <th>Validation<br />Result</th>\n                                        <th>Info</th>\n                                        <th>Select</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {isScanning && (\n                                        <tr>\n                                            <td colSpan=\"8\" className=\"scanning-message\"><center>Scanning...</center></td>\n                                        </tr>\n                                    )}\n                                    {!isScanning && nodes.length === 0 && (\n                                        <tr>\n                                            <td colSpan=\"8\" className=\"no-device-message\"><center>No device found</center></td>\n                                        </tr>\n                                    )}\n                                    {!isScanning && paginatedNodes.map((node, index) => (\n                                        <tr key={node.ip}>\n                                            <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\n                                            <td>{node.ip}</td>\n                                            <td>{node.hostname}</td>\n                                            <td>{node.os_type}</td>\n                                            <td>\n                                                <button \n                                                    disabled={validatingNode !== null && validatingNode.ip === node.ip}\n                                                    onClick={() => validateNode(node)}\n                                                >\n                                                    {validatingNode !== null && validatingNode.ip === node.ip ? 'Validating...' : 'Validate'}\n                                                </button>\n                                            </td>\n                                            <td style={{ color: 'red', fontFamily: 'Arial, sans-serif' }}>\n                                                {validationResults[node.ip] ? validationResults[node.ip].status : 'Not validated'}\n                                            </td>\n                                            <td>\n                                                {validationResults[node.ip] && validationResults[node.ip].status === 'failure' && (\n                                                    <button onClick={() => alert(validationResults[node.ip].message)}>Info</button>\n                                                )}\n                                            </td>\n                                            <td className=\"checkbox-column\">\n                                                <label className=\"checkbox-label\">\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        checked={selectedRows.some(selectedRow => selectedRow.ip === node.ip)}\n                                                        onChange={(event) => handleCheckboxChange(event, node)}\n                                                    />\n                                                    <span className=\"checkbox-custom\"></span>\n                                                </label>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            <div className=\"pagination\">\n                                {Array.from({ length: Math.ceil(nodes.length / itemsPerPage) }, (_, i) => (\n                                    <button\n                                        key={i}\n                                        onClick={() => handlePageChange(i + 1)}\n                                        className={currentPage === i + 1 ? 'active' : ''}\n                                    >\n                                        {i + 1}\n                                    </button>\n                                ))}\n                            </div>\n                            <button\n                                className=\"next-button\"\n                                onClick={handleDeploy}\n                                disabled={selectedRows.length === 0}\n                            >\n                                <strong>Scale up</strong>\n                            </button>\n                        </div>\n                        <Sidebar />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}