{"ast":null,"code":"var _jsxFileName = \"/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/StatusPopup.jsx\";\nimport React from 'react';\nimport styles from \"../Styles/StatusPopup.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusPopup = ({\n  isVisible,\n  statusMessages,\n  onClose\n}) => {\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.closeButton,\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: statusMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles[`${msg.type}-message`],\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: msg.type === 'success' ? styles['tick'] : styles['error']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = StatusPopup;\nexport default StatusPopup;\nvar _c;\n$RefreshReg$(_c, \"StatusPopup\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","StatusPopup","isVisible","statusMessages","onClose","className","overlay","children","popup","header","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","onClick","map","msg","index","type","text","_c","$RefreshReg$"],"sources":["/home/likit14/Documents/GitHub/Pinakastra-Cloud/src/View/StatusPopup.jsx"],"sourcesContent":["import React from 'react';\nimport styles from \"../Styles/StatusPopup.module.css\";\n\nconst StatusPopup = ({ isVisible, statusMessages, onClose }) => {\n    if (!isVisible) return null;\n\n    return (\n        <div className={styles.overlay}>\n            <div className={styles.popup}>\n                <div className={styles.header}>\n                    <h3>Status</h3>\n                    <button className={styles.closeButton} onClick={onClose}>âœ•</button>\n                </div>\n                <ul>\n                    {statusMessages.map((msg, index) => (\n                        <li key={index} className={styles[`${msg.type}-message`]}>\n                            <span className={msg.type === 'success' ? styles['tick'] : styles['error']}></span> \n{msg.text}\n                        \n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default StatusPopup;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EAC5D,IAAI,CAACF,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACIF,OAAA;IAAKK,SAAS,EAAEP,MAAM,CAACQ,OAAQ;IAAAC,QAAA,eAC3BP,OAAA;MAAKK,SAAS,EAAEP,MAAM,CAACU,KAAM;MAAAD,QAAA,gBACzBP,OAAA;QAAKK,SAAS,EAAEP,MAAM,CAACW,MAAO;QAAAF,QAAA,gBAC1BP,OAAA;UAAAO,QAAA,EAAI;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfb,OAAA;UAAQK,SAAS,EAAEP,MAAM,CAACgB,WAAY;UAACC,OAAO,EAAEX,OAAQ;UAAAG,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACNb,OAAA;QAAAO,QAAA,EACKJ,cAAc,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BlB,OAAA;UAAgBK,SAAS,EAAEP,MAAM,CAAC,GAAGmB,GAAG,CAACE,IAAI,UAAU,CAAE;UAAAZ,QAAA,gBACrDP,OAAA;YAAMK,SAAS,EAAEY,GAAG,CAACE,IAAI,KAAK,SAAS,GAAGrB,MAAM,CAAC,MAAM,CAAC,GAAGA,MAAM,CAAC,OAAO;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC9GI,GAAG,CAACG,IAAI;QAAA,GAFwBF,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACQ,EAAA,GAtBIpB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}